[{"G:\\ems-frontend\\src\\index.js":"1","G:\\ems-frontend\\src\\App.js":"2","G:\\ems-frontend\\src\\reportWebVitals.js":"3","G:\\ems-frontend\\src\\store.js":"4","G:\\ems-frontend\\src\\rootReducer.js":"5","G:\\ems-frontend\\src\\home\\homePage.js":"6","G:\\ems-frontend\\src\\authentication\\frontPage.js":"7","G:\\ems-frontend\\src\\reducers\\actions.js":"8","G:\\ems-frontend\\src\\QuestionBank\\questionBank.js":"9","G:\\ems-frontend\\src\\home\\profile.js":"10","G:\\ems-frontend\\src\\Exams\\enterExam.js":"11","G:\\ems-frontend\\src\\Exams\\examDetails.js":"12","G:\\ems-frontend\\src\\reducers\\reducer.js":"13","G:\\ems-frontend\\src\\home\\appBar.js":"14","G:\\ems-frontend\\src\\reducers\\constants.js":"15","G:\\ems-frontend\\src\\home\\createViva.js":"16","G:\\ems-frontend\\src\\authentication\\formPage.js":"17","G:\\ems-frontend\\src\\Exams\\teacherView.js":"18","G:\\ems-frontend\\src\\Exams\\studentView.js":"19","G:\\ems-frontend\\src\\methods\\postMethod.js":"20","G:\\ems-frontend\\src\\utils\\api.js":"21","G:\\ems-frontend\\src\\methods\\getMethod.js":"22","G:\\ems-frontend\\src\\utils\\styles.js":"23","G:\\ems-frontend\\src\\home\\fieldHome\\body.js":"24","G:\\ems-frontend\\src\\common\\Loading.js":"25","G:\\ems-frontend\\src\\home\\fieldProfile\\teacherProfile.js":"26","G:\\ems-frontend\\src\\home\\fieldProfile\\studentProfile.js":"27","G:\\ems-frontend\\src\\authentication\\formStyle.js":"28","G:\\ems-frontend\\src\\alertBox.js":"29","G:\\ems-frontend\\src\\methods.js":"30","G:\\ems-frontend\\src\\authentication\\field\\email.js":"31","G:\\ems-frontend\\src\\authentication\\field\\name.js":"32","G:\\ems-frontend\\src\\authentication\\field\\password.js":"33","G:\\ems-frontend\\src\\authentication\\field\\registrationNo.js":"34","G:\\ems-frontend\\src\\home\\fieldViva\\createVivaComponent.js":"35","G:\\ems-frontend\\src\\authentication\\field\\teacherMode.js":"36","G:\\ems-frontend\\src\\Exams\\component\\bottomNavbar.js":"37","G:\\ems-frontend\\src\\authentication\\field\\copyright.js":"38","G:\\ems-frontend\\src\\Exams\\component\\questions.js":"39","G:\\ems-frontend\\src\\home\\fieldHome\\sectionTop.js":"40","G:\\ems-frontend\\src\\home\\fieldViva\\pairTextField.js":"41","G:\\ems-frontend\\src\\home\\fieldHome\\column.js":"42","G:\\ems-frontend\\src\\Exams\\component\\leftNavBar.js":"43","G:\\ems-frontend\\src\\Exams\\component\\rightNavBar.js":"44","G:\\ems-frontend\\src\\home\\fieldViva\\regPicker.js":"45","G:\\ems-frontend\\src\\home\\fieldHome\\exam.js":"46","G:\\ems-frontend\\src\\home\\fieldViva\\datePicker.js":"47","G:\\ems-frontend\\src\\utils\\comon.functions.js":"48","G:\\ems-frontend\\src\\methods\\putMethod.js":"49","G:\\ems-frontend\\src\\home\\modal\\detailsModal.js":"50","G:\\ems-frontend\\src\\home\\modal\\detailsModalComponent.js":"51"},{"size":736,"mtime":1624622089165,"results":"52","hashOfConfig":"53"},{"size":2185,"mtime":1624622089145,"results":"54","hashOfConfig":"53"},{"size":362,"mtime":1621676576656,"results":"55","hashOfConfig":"53"},{"size":672,"mtime":1624622089224,"results":"56","hashOfConfig":"53"},{"size":291,"mtime":1624622089223,"results":"57","hashOfConfig":"53"},{"size":1160,"mtime":1624637271078,"results":"58","hashOfConfig":"53"},{"size":1874,"mtime":1624622089159,"results":"59","hashOfConfig":"53"},{"size":444,"mtime":1624622089221,"results":"60","hashOfConfig":"53"},{"size":3145,"mtime":1624622089157,"results":"61","hashOfConfig":"53"},{"size":1860,"mtime":1624622089164,"results":"62","hashOfConfig":"53"},{"size":1543,"mtime":1624622089148,"results":"63","hashOfConfig":"53"},{"size":3712,"mtime":1624622089154,"results":"64","hashOfConfig":"53"},{"size":638,"mtime":1624622089222,"results":"65","hashOfConfig":"53"},{"size":3429,"mtime":1624637200643,"results":"66","hashOfConfig":"53"},{"size":192,"mtime":1624622089222,"results":"67","hashOfConfig":"53"},{"size":795,"mtime":1622664902592,"results":"68","hashOfConfig":"53"},{"size":6045,"mtime":1624622089158,"results":"69","hashOfConfig":"53"},{"size":2134,"mtime":1624622089156,"results":"70","hashOfConfig":"53"},{"size":3832,"mtime":1624622089155,"results":"71","hashOfConfig":"53"},{"size":539,"mtime":1624622089166,"results":"72","hashOfConfig":"53"},{"size":237,"mtime":1624622089225,"results":"73","hashOfConfig":"53"},{"size":336,"mtime":1623680591488,"results":"74","hashOfConfig":"53"},{"size":698,"mtime":1624622089226,"results":"75","hashOfConfig":"53"},{"size":1825,"mtime":1624622089162,"results":"76","hashOfConfig":"53"},{"size":237,"mtime":1624622089160,"results":"77","hashOfConfig":"53"},{"size":186,"mtime":1622624900084,"results":"78","hashOfConfig":"53"},{"size":896,"mtime":1623007234163,"results":"79","hashOfConfig":"53"},{"size":575,"mtime":1621881714194,"results":"80","hashOfConfig":"53"},{"size":1411,"mtime":1623681270760,"results":"81","hashOfConfig":"53"},{"size":1638,"mtime":1623619738748,"results":"82","hashOfConfig":"53"},{"size":606,"mtime":1621930263728,"results":"83","hashOfConfig":"53"},{"size":1229,"mtime":1622061636843,"results":"84","hashOfConfig":"53"},{"size":641,"mtime":1621930153543,"results":"85","hashOfConfig":"53"},{"size":611,"mtime":1624395584075,"results":"86","hashOfConfig":"53"},{"size":4179,"mtime":1624401088754,"results":"87","hashOfConfig":"53"},{"size":597,"mtime":1621930397100,"results":"88","hashOfConfig":"53"},{"size":2635,"mtime":1624622089145,"results":"89","hashOfConfig":"53"},{"size":451,"mtime":1621930918884,"results":"90","hashOfConfig":"53"},{"size":4585,"mtime":1624622089147,"results":"91","hashOfConfig":"53"},{"size":1160,"mtime":1621972649484,"results":"92","hashOfConfig":"53"},{"size":1053,"mtime":1622381764478,"results":"93","hashOfConfig":"53"},{"size":441,"mtime":1624443991495,"results":"94","hashOfConfig":"53"},{"size":6080,"mtime":1624637200637,"results":"95","hashOfConfig":"53"},{"size":9091,"mtime":1624637200640,"results":"96","hashOfConfig":"53"},{"size":5055,"mtime":1624637200644,"results":"97","hashOfConfig":"53"},{"size":4310,"mtime":1624622089162,"results":"98","hashOfConfig":"53"},{"size":1825,"mtime":1622411441671,"results":"99","hashOfConfig":"53"},{"size":326,"mtime":1624622089225,"results":"100","hashOfConfig":"53"},{"size":537,"mtime":1624622089166,"results":"101","hashOfConfig":"53"},{"size":877,"mtime":1624280428718,"results":"102","hashOfConfig":"53"},{"size":3295,"mtime":1624280105175,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1wyvzk7",{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"106"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":3,"source":"162","usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"106"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"106"},"G:\\ems-frontend\\src\\index.js",[],["227","228"],"G:\\ems-frontend\\src\\App.js",["229","230","231"],"import './App.css';\r\nimport jwt from 'jsonwebtoken';\r\nimport React, { useState, useEffect } from 'react';\r\nimport FrontPage from './authentication/frontPage';\r\nimport HomePage from './home/homePage';\r\nimport EnterExam from './Exams/enterExam';\r\nimport { Switch, Route } from \"react-router\";\r\nimport { connect } from 'react-redux';\r\nimport { setTeacherMode, setUserAction } from './reducers/actions';\r\nimport ExamDetails from './Exams/examDetails';\r\nimport Profile from './home/profile';\r\nimport QuestionBank from './QuestionBank/questionBank';\r\nconst App = ({ user, dispatch }) => {\r\n  const isLoggedIn = user.email;\r\n  useEffect(() => {\r\n    if (!user.email && localStorage.token) {\r\n      try {\r\n        console.log('decoded', jwt.decode(localStorage.token))\r\n        const userObj = jwt.decode(localStorage.token);\r\n        dispatch(setUserAction(userObj))\r\n        dispatch(setTeacherMode(userObj.teacherMode))\r\n      } catch (e) {}\r\n    }\r\n  }, [user.email, localStorage.token]);\r\n  \r\n  const [page, setPage] = useState(<div></div>);\r\n  // useEffect(() => {\r\n  //   const url = window.location.pathname;\r\n  //   if (url === '/') setPage(HomePage);\r\n  //   if (url.includes('enter')) setPage(EnterExam);\r\n  // }, [window.location.pathname])\r\n  if (isLoggedIn) {\r\n    // return <Switch><Route path=\"*\" component={page} /></Switch>;\r\n    return (\r\n      <Switch>\r\n        <Route\r\n          path='/enter/:id'\r\n          component={EnterExam}\r\n        />\r\n        <Route\r\n          path='/details/:id'\r\n          component={ExamDetails}\r\n        />\r\n        <Route\r\n          path='/profile/:id'\r\n          component={Profile}\r\n        />\r\n        <Route\r\n          path='/questionBank'\r\n          component={QuestionBank}\r\n        />\r\n        <Route\r\n          path='/'\r\n          component={HomePage}\r\n        />\r\n      </Switch>\r\n    )\r\n  }\r\n  else\r\n  return (\r\n    <Switch>\r\n        <Route\r\n          path='/'\r\n          component={FrontPage}\r\n        />\r\n      </Switch>\r\n  )\r\n\r\n}\r\nconst mapStateToProps = state => ({\r\n  user: state.app.user,\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatch,\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (App);\r\n\r\n","G:\\ems-frontend\\src\\reportWebVitals.js",[],"G:\\ems-frontend\\src\\store.js",[],"G:\\ems-frontend\\src\\rootReducer.js",[],"G:\\ems-frontend\\src\\home\\homePage.js",[],"G:\\ems-frontend\\src\\authentication\\frontPage.js",["232","233"],"import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport FormPage from './formPage';\r\nimport styled from 'styled-components';\r\nimport { Row } from '../utils/styles';\r\n\r\nconst ExtraLarge = styled.div`\r\n  font-size: 48px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  margin-top: -120px;\r\n`;\r\n\r\nconst Center = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 45px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  /* background-image: linear-gradient(to right, #f4baff, #f1d7ff); */\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledButton = styled.div`\r\n  width: fit-content;\r\n  padding: 20px 30px;;\r\n  background: rgb(88 127 241);\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ImgStyled = styled.img`\r\n  position: relative;\r\n  top: -150px;\r\n`;\r\n\r\nfunction FrontPage(props) {\r\n  const [mode, setMode] = useState('');\r\n\r\n  function btnClicked(event) {\r\n    const { value } = event.currentTarget;\r\n    setMode(value);\r\n  }\r\n\r\n  let Component = (\r\n    <Container>\r\n      <div>\r\n        <div style={{ textAlign: 'center' }}>\r\n          <ImgStyled src=\"https://www.sust.edu/images/logo.png\" height={\"140px\"}/>\r\n        </div>\r\n        <ExtraLarge>SUST Viva Management System</ExtraLarge>\r\n        <Center>\r\n          <Row columns=\"1fr 1fr\" gridGap=\"10px\">\r\n            <StyledButton onClick={() => setMode(\"signIn\")} > Log In </StyledButton>\r\n            <StyledButton name=\"button\" onClick={() => setMode(\"signUp\")} > Sign Up </StyledButton>\r\n          </Row>\r\n        </Center>\r\n      </div>\r\n      \r\n    </Container>\r\n  );\r\n  const state = { formMode: mode, setFormMode: setMode }\r\n  return (\r\n    <div>\r\n      {mode === \"\" ? Component : <FormPage {...state} />}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default FrontPage;","G:\\ems-frontend\\src\\reducers\\actions.js",[],"G:\\ems-frontend\\src\\QuestionBank\\questionBank.js",["234","235","236","237","238","239"],"import React, { useState, useEffect } from 'react';\r\nimport MyAppBar from '../home/appBar'\r\nimport CreateViva from '../home/createViva';\r\nimport _ from 'underscore';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport getData from '../methods/getMethod';\r\nimport { useParams } from 'react-router';\r\nimport { Center, Row } from '../utils/styles';\r\nimport Loading from '../common/Loading';\r\nimport postData from '../methods/postMethod';\r\n\r\nconst StyledRow = styled(Row)`\r\n    height: 40px;\r\n    padding: 10px 20px;\r\n    box-shadow: 1px 1px 3px #bbbbbb;\r\n    border-radius: 5px;\r\n    margin-bottom: 10px;\r\n    ${props => props.cardColor && `background: ${props.cardColor};`}\r\n`;\r\n\r\nconst TableWrapper = styled.div`\r\n    padding: 20px;\r\n    width: 650px;\r\n`;\r\n\r\nconst RightWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Card = ({ isEnded, isRunningNow, question }) => {\r\n    return (\r\n        <div>\r\n            <StyledRow columns=\"1fr\" >\r\n                <Wrapper>{question}</Wrapper>\r\n            </StyledRow>\r\n        </div>\r\n    )\r\n}\r\nfunction QuestionBank({ dispatch, user }) {\r\n\r\n    const [vivaModal, setVivaModal] = useState(false);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [exam, setExam] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    useEffect(() => loadQuestion(), [user.email])\r\n    async function loadQuestion() {\r\n        setIsLoading(true);\r\n        const response = await postData(`/question/getBank`, { email: user.email })\r\n        if (response.status === 200) {\r\n            console.log('exam --------------', response.body);\r\n            setQuestions(response.body)\r\n        }\r\n        setIsLoading(false);\r\n\r\n        // const res = await postData(`/viva/getVivaHistory`, { id: id })\r\n        // if (res.status === 200) {\r\n        //     const { questions } = res.body;\r\n        //     const newState = questions.map(element => {\r\n        //         element.inputComment = \"\";\r\n        //         return element;\r\n        //     })\r\n        //     setQuestions(newState);\r\n        // }\r\n    }\r\n\r\n    const state = {\r\n        vivaModal: vivaModal,\r\n        setVivaModal: setVivaModal\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MyAppBar state={state} />\r\n            <CreateViva state={state} />\r\n            <Center>\r\n                <TableWrapper>\r\n                    <StyledRow columns=\"1fr\">\r\n                        <h3>Questions</h3>\r\n                    </StyledRow>\r\n                    {isLoading && <Loading />}\r\n                    {!isLoading && _.map(questions, q =>\r\n                        <Card key={Math.random()} question={q} />\r\n                    )} \r\n                </TableWrapper>\r\n            </Center>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.app.user,\r\n  })\r\n  const mapDispatchToProps = dispatch => ({\r\n    dispatch,\r\n  })\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps) (QuestionBank);\r\n  \r\n  ","G:\\ems-frontend\\src\\home\\profile.js",["240","241","242"],"import { Card, CardContent } from \"@material-ui/core\"\r\nimport TeacherProfile from './fieldProfile/teacherProfile'\r\nimport StudentProfile from \"./fieldProfile/studentProfile\";\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport getData from \"../methods/getMethod\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '90vh',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n    },\r\n    card: {\r\n        // minWidth: 300,\r\n        margin: theme.spacing(2),\r\n        padding: theme.spacing(1),\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        // justifyContent: 'space-between',\r\n    },\r\n\r\n}));\r\n\r\nfunction Profile(props) {\r\n    const { id } = useParams();\r\n    const classes = useStyles();\r\n    const [profileInfo, setProfileInfo] = useState({});\r\n    useEffect(() => {\r\n        getData(`/profile/getProfile/${id}`)\r\n            .then(data => {\r\n                console.log('profile ', data.body);\r\n            })\r\n        console.log('hii');\r\n    }, []);\r\n    let component;\r\n    if (props.teacherMode) {\r\n        component = <TeacherProfile />\r\n    }\r\n    else {\r\n        component = <StudentProfile/>\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    {component}\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.app.user,\r\n    teacherMode: state.app.teacherMode,\r\n  })\r\n  const mapDispatchToProps = dispatch => ({\r\n    dispatch,\r\n  })\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps) (Profile);\r\n  \r\n  ","G:\\ems-frontend\\src\\Exams\\enterExam.js",["243"],"import React, { useState, useEffect } from 'react';\r\nimport './styles.css'\r\nimport MyAppBar from '../home/appBar'\r\nimport CreateViva from '../home/createViva';\r\nimport TeacherView from './teacherView';\r\nimport StudentView from './studentView'\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { getExamByID } from '../utils/api';\r\nimport { setCurrentExam } from '../reducers/actions';\r\n\r\nfunction EnterExam({ dispatch, teacherMode }) {\r\n\r\n    const [vivaModal, setVivaModal] = useState(false);\r\n    const { id } = useParams();\r\n\r\n    const [stopWatchTime, setStopWatchTime] = useState(0);\r\n\r\n    const state = {\r\n        vivaModal: vivaModal,\r\n        setVivaModal: setVivaModal\r\n    };\r\n    useEffect(() => {\r\n        getExamByID(id).then(data => dispatch(setCurrentExam(data.body)));\r\n    }, []);\r\n    console.log('hi----------');\r\n    // if (page === 'profile') {\r\n    //     body = <Profile className='body' state={state} />;\r\n    // }\r\n    let viewComponent;\r\n    \r\n    if (teacherMode)\r\n        viewComponent = <TeacherView setStopWatchTime={setStopWatchTime} stopWatchTime={stopWatchTime} />\r\n    else\r\n        viewComponent = <StudentView setStopWatchTime={setStopWatchTime} stopWatchTime={stopWatchTime}/>\r\n\r\n    return (\r\n        <div>\r\n            <MyAppBar state={state} />\r\n            <CreateViva state={state} />\r\n            {viewComponent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(state => ({ teacherMode: state.app.teacherMode }), dispatch => ({ dispatch })) (EnterExam);\r\n","G:\\ems-frontend\\src\\Exams\\examDetails.js",["244","245","246","247","248"],"import React, { useState, useEffect } from 'react';\r\nimport './styles.css'\r\nimport MyAppBar from '../home/appBar'\r\nimport CreateViva from '../home/createViva';\r\nimport _ from 'underscore';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport getData from '../methods/getMethod';\r\nimport { useParams } from 'react-router';\r\nimport { Center, Row } from '../utils/styles';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport Loading from '../common/Loading';\r\n\r\nconst StyledRow = styled(Row)`\r\n    height: 40px;\r\n    padding: 10px 20px;\r\n    box-shadow: 1px 1px 3px #bbbbbb;\r\n    border-radius: 5px;\r\n    margin-bottom: 10px;\r\n    ${props => props.cardColor && `background: ${props.cardColor};`}\r\n`;\r\n\r\nconst TableWrapper = styled.div`\r\n    padding: 20px;\r\n    width: 650px;\r\n`;\r\n\r\nconst RightWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Card = ({ isEnded, isRunningNow, value, reg }) => {\r\n    let status = '';\r\n    let cardColor = '';\r\n    if (isRunningNow) {\r\n        status = 'Running';\r\n        cardColor = '#ff8282';\r\n    } else if (isEnded) {\r\n        status = 'Ended';\r\n        cardColor = '#efa5ff';\r\n    } else {\r\n        status = 'Scheduled';\r\n        cardColor = '#bfefca';\r\n    }\r\n    return (\r\n        <div>\r\n            <StyledRow columns=\"1fr 1fr 1fr\" cardColor={cardColor}>\r\n                <Wrapper>{reg}</Wrapper>\r\n                <Wrapper>{status}</Wrapper>\r\n                <Center>\r\n                    <Wrapper >{value}</Wrapper>\r\n                </Center>\r\n            </StyledRow>\r\n        </div>\r\n    )\r\n}\r\nfunction ExamDetails({ dispatch, teacherMode }) {\r\n\r\n    const [vivaModal, setVivaModal] = useState(false);\r\n    const { id } = useParams();\r\n    const [ptList, setPtList] = useState([]);\r\n    const [exam, setExam] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    useEffect(() => loadQuestion(), [])\r\n    async function loadQuestion() {\r\n        setIsLoading(true);\r\n        const response = await getData(`/exam/details/${id}`)\r\n        if (response.status === 200) {\r\n            console.log('exam --------------', response.body);\r\n            setPtList(response.body)\r\n        }\r\n        setIsLoading(false);\r\n\r\n        // const res = await postData(`/viva/getVivaHistory`, { id: id })\r\n        // if (res.status === 200) {\r\n        //     const { questions } = res.body;\r\n        //     const newState = questions.map(element => {\r\n        //         element.inputComment = \"\";\r\n        //         return element;\r\n        //     })\r\n        //     setQuestions(newState);\r\n        // }\r\n    }\r\n\r\n    const state = {\r\n        vivaModal: vivaModal,\r\n        setVivaModal: setVivaModal\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MyAppBar state={state} />\r\n            <CreateViva state={state} />\r\n            <Center>\r\n                <TableWrapper>\r\n                    <StyledRow columns=\"1fr 1fr 1fr\">\r\n                        <h3>Registration No</h3>\r\n                        <h3>Status</h3>\r\n                        <Center>\r\n                            <h3>Exam Time</h3>\r\n                        </Center>\r\n\r\n                    </StyledRow>\r\n                    {isLoading && <Loading />}\r\n                    {!isLoading && _.map(ptList, pt =>\r\n                        <Card key={Math.random()} {...pt} />\r\n                    )} \r\n                </TableWrapper>\r\n            </Center>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(state => ({ teacherMode: state.app.teacherMode }), dispatch => ({ dispatch })) (ExamDetails);\r\n","G:\\ems-frontend\\src\\reducers\\reducer.js",[],"G:\\ems-frontend\\src\\home\\appBar.js",["249","250"],"G:\\ems-frontend\\src\\reducers\\constants.js",[],"G:\\ems-frontend\\src\\home\\createViva.js",[],"G:\\ems-frontend\\src\\authentication\\formPage.js",["251","252"],"\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Container from '@material-ui/core/Container';\r\nimport useStyles from './formStyle';\r\n\r\nimport Name from './field/name';\r\nimport Email from './field/email';\r\nimport Password from './field/password';\r\nimport RegistrationNo from './field/registrationNo';\r\nimport TeacherMode from './field/teacherMode';\r\nimport Copyright from './field/copyright';\r\nimport postData from '../methods/postMethod'\r\nimport getData from '../methods/getMethod';\r\n\r\nimport AlertDialog from '../alertBox';\r\nimport { setTeacherMode, setUserAction } from '../reducers/actions';\r\n\r\n\r\nconst initialInfo = {\r\n  firstName: null,\r\n  lastName: null,\r\n  email: null,\r\n  password: null,\r\n  teacherMode: false,\r\n  teacherPass: null,\r\n  registrationNo: null,\r\n}\r\n\r\nconst signInMode = ['email', 'password'];\r\nconst signUpMode = ['firstName', 'lastName', 'teacherMode', 'teacherPass','registrationNo'];\r\n\r\n\r\nfunction validateForm(formMode, info, setInfo) {\r\n  let result = true;\r\n  const tmpData = { ...info }\r\n  for (let item of signInMode) {\r\n    if (tmpData[item] === null || tmpData[item] === '') {\r\n      tmpData[item] = '';\r\n      result = false;\r\n    }\r\n  }\r\n  if (formMode === 'signUp') {\r\n    for (let item of signUpMode) {\r\n      if (item === 'teacherPass') {\r\n        if (tmpData.teacherMode && (tmpData.teacherPass === null || tmpData.teacherPass === '')) {\r\n          tmpData[item] = '';\r\n          result = false;\r\n        }\r\n      } else if (item === 'registrationNo') {\r\n        if (!tmpData.teacherMode && (tmpData.registrationNo === null || tmpData.registrationNo === '')) {\r\n          tmpData[item] = '';\r\n          result = false;\r\n        }\r\n      }\r\n      else if ((tmpData[item] === null || tmpData[item] === '')) {\r\n        tmpData[item] = '';\r\n        result = false;\r\n      }\r\n    }\r\n  }\r\n  setInfo(tmpData);\r\n  return result;\r\n}\r\n\r\n\r\n\r\nconst FormPage = ({ formMode, setFormMode, dispatch, teacherMode  }) => {\r\n  const classes = useStyles();\r\n  const [alertBox, setAlertBox] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState('Nothing!');\r\n\r\n  const [info, setInfo] = useState(initialInfo);\r\n\r\n  function handleChange(event) {\r\n    const { name, value, type, checked } = event.currentTarget\r\n    type === \"checkbox\" ? setInfo({ ...info, [name]: checked }) : setInfo({ ...info, [name]: value })\r\n  }\r\n\r\n  async function submitAction(event) {\r\n\r\n    console.log('hi', formMode, info);\r\n    if (validateForm(formMode, info, setInfo)) {\r\n      // FETCH DATA\r\n      if (formMode === 'signIn') {\r\n        const res = await postData('/logIn', info);\r\n        if (res.status===200) {\r\n          localStorage.setItem('token', res.body.token);\r\n          localStorage.setItem('email', res.body.email);\r\n          localStorage.setItem('teacherMode',res.body.teacherMode);\r\n          dispatch(setUserAction(res.body));\r\n          console.log('here also', res.body);\r\n          dispatch(setTeacherMode(res.body.teacherMode));\r\n          setFormMode('');\r\n        }\r\n        else {\r\n          setErrorMsg(res.body);\r\n          setAlertBox(true);\r\n        }\r\n      }\r\n      else {\r\n        const res = await postData('/signUp', info);\r\n        if (res.status === 200)\r\n          setFormMode('');\r\n        else {\r\n          setErrorMsg(res.body);\r\n          setAlertBox(true);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AlertDialog state={{ open: alertBox, setOpen: setAlertBox, description: errorMsg }} />\r\n      {/* <ArrowBackIcon margin={2} onClick={(event) => setFormMode('')}></ArrowBackIcon> */}\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}><LockOutlinedIcon /></Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">{formMode === 'signIn' ? 'Log In' : 'Sign Up'}</Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <Grid container spacing={2}>\r\n\r\n              {formMode === \"signUp\" && <Name handleChange={handleChange} info={info} />}\r\n              <Email handleChange={handleChange} info={info} />\r\n              <Password handleChange={handleChange} info={info} name='password' label='Password' />\r\n              {formMode === 'signUp' && <TeacherMode info={info} handleChange={handleChange} />}\r\n              {formMode === 'signUp' && info.teacherMode && <Password handleChange={handleChange} info={info} name='teacherPass' label=\"Teacher's Private Password\" />}\r\n              {formMode === 'signUp' && !info.teacherMode && <RegistrationNo handleChange={handleChange} info={info} />}\r\n            </Grid>\r\n            <Button\r\n              // type=\"submit\"\r\n              onClick={(event) => submitAction(event)} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n              {formMode === 'signIn' ? 'Log In' : 'Sign Up'}\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link style={{ cursor: 'pointer' }} onClick={(event) => setFormMode(formMode === 'signIn' ? 'signUp' : 'signIn')} variant=\"body2\">\r\n                  {formMode === 'signIn' ? `Don't have an account? Sign Up` : 'Already have an account? Sign in'}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Copyright />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({})\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatch\r\n})\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormPage);\r\n  ","G:\\ems-frontend\\src\\Exams\\teacherView.js",["253"],"\r\n\r\n\r\nimport { connect } from 'react-redux'\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LeftNavBar from './component/leftNavBar';\r\nimport RightNavBar from './component/rightNavBar'\r\nimport BottomNavbar from './component/bottomNavbar';\r\nimport Questions from './component/questions';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        // backgroundColor: 'red',\r\n        flexGrow: 1,\r\n        height: '90vh',\r\n    },\r\n    leftBar: {\r\n        // backgroundColor: 'green',\r\n        boxShadow: theme.shadows[5],\r\n        // flexGrow: 1,\r\n        width: '22vw',\r\n        height: '100%',\r\n    },\r\n    mid: {\r\n        // backgroundColor: 'purple',\r\n        flexGrow: 1,\r\n    },\r\n    rightBar: {\r\n        // backgroundColor: 'green',\r\n        boxShadow: theme.shadows[5],\r\n        // flexGrow: 1,\r\n        height: '100%',\r\n        width: '20vw',\r\n    },\r\n\r\n\r\n}));\r\n\r\nconst  TeacherView = (props) => {\r\n    let { id } = useParams();\r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    const [render,setRender] = useState(0);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.leftBar}>\r\n                <LeftNavBar {...props} state={{render:render,setRender:setRender}}/>\r\n            </div>\r\n            <div className={classes.mid}>\r\n                <Questions state={{ id: id, questions: questions,setQuestions: setQuestions,render:render,setRender:setRender }} />\r\n                <BottomNavbar state={{render:render,setRender:setRender}}/>\r\n            </div>\r\n            <div className={classes.rightBar}>\r\n                <RightNavBar {...props} state={{setQuestions:setQuestions,render:render,setRender:setRender}}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.app.user\r\n})\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatch\r\n})\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherView);\r\n  ","G:\\ems-frontend\\src\\Exams\\studentView.js",["254"],"/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport postData from '../methods/postMethod';\r\nimport { useParams } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Typography, Button, Divider } from '@material-ui/core';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentViva } from '../reducers/actions';\r\nimport { getViva } from '../utils/api';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#cff8fc',\r\n        flexGrow: 1,\r\n        height: '90vh',\r\n        // overflowY: 'scroll',\r\n    },\r\n    parent: {\r\n        minWidth: 200,\r\n        margin: \"2%\",\r\n        boxShadow: theme.shadows[5],\r\n    },\r\n    question: {\r\n        fontSize: 17,\r\n    },\r\n    container: {\r\n        // backgroundColor: 'red',\r\n        width: '65vw',\r\n        overflowY: 'scroll',\r\n    },\r\n    title: {\r\n        fontSize: 26,\r\n        paddingTop: '35vh',\r\n        paddingLeft: '22vw',\r\n    }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction StudentView({ dispatch, user }) {\r\n    const classes = useStyles();\r\n    const [permission, setPermission] = useState(false);\r\n\r\n    let { id } = useParams();\r\n\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n    useEffect(async () => {\r\n        const viva = await getViva(id, user.registrationNo);\r\n        dispatch(setCurrentViva(viva.body || {}));\r\n    }, [user]);\r\n    async function loadQuestion() {\r\n        const response = await postData(`/exam/verifyPermission`, { email: localStorage.getItem('email'), id: id })\r\n        if (response.status === 200) {\r\n            console.log(response.body.permission);\r\n            setPermission(response.body.permission);\r\n        }\r\n\r\n        const res = await postData(`/viva/getVivaHistory`, { id: id })\r\n        if (res.status === 200) {\r\n            const { questions } = res.body;\r\n            const newState = questions.map(element => {\r\n                element.inputComment = \"\";\r\n                return element;\r\n            })\r\n            setQuestions(newState);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const id = setInterval(loadQuestion, 800);\r\n        loadQuestion();\r\n        return () => {\r\n            clearInterval(id);\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    let component;\r\n    if (!permission) {\r\n        component = (\r\n            <div className={classes.root}>\r\n                <div className={classes.container}>\r\n                    <Typography className={classes.title} color=\"textPrimary\" gutterBottom>You Are In Waiting List</Typography>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        component = (\r\n            <div className={classes.root}>\r\n                <div className={classes.container}>\r\n                    {\r\n                        questions &&\r\n                        questions.map((element, idx) => (\r\n                            <Card className={classes.parent}>\r\n                                <CardContent >\r\n                                    <Typography className={classes.question} color=\"textPrimary\" gutterBottom>{element.question}</Typography>\r\n                                    <Divider /><Divider />\r\n\r\n                                </CardContent>\r\n                            </Card>))\r\n                    }\r\n                </div>\r\n\r\n            </div>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {component}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.app.user\r\n})\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatch\r\n})\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentView);\r\n  ","G:\\ems-frontend\\src\\methods\\postMethod.js",[],"G:\\ems-frontend\\src\\utils\\api.js",[],"G:\\ems-frontend\\src\\methods\\getMethod.js",[],"G:\\ems-frontend\\src\\utils\\styles.js",[],"G:\\ems-frontend\\src\\home\\fieldHome\\body.js",["255","256","257","258","259","260"],"\r\n\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridColumn from './column';\r\nimport SectionTop from './sectionTop';\r\nimport getData from '../../methods/getMethod';\r\nimport { Row } from '../../utils/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: theme.spacing(2),\r\n    margin: theme.spacing(4),\r\n  },\r\n  container: {\r\n    justifyContent: 'space-around',\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nexport default function Body(props) {\r\n\r\n  const [exams, setExams] = useState({ upComingExam: [], runningExam: [], endedExam: [] })\r\n\r\n  useEffect(async function load() {\r\n    const res = await getData('/exam/currentExam');\r\n    if (res.status === 200)\r\n      setExams(res.body);\r\n    // const intervalId = setInterval(async() => {\r\n        \r\n    //   console.log('refreshing');\r\n    //   const res = await getData('/exam/currentExam');\r\n    //   if (res.status === 200) {\r\n    //     console.log('reload');\r\n    //     setExams(res.body);\r\n    //   }\r\n    // }, 2000)\r\n    // return () => clearInterval(intervalId)\r\n    \r\n    // const refresh = setInterval(async () => {\r\n    // return clearInterval(refresh)\r\n  }, []);\r\n\r\n  const {} = props.state;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <SectionTop state={props.state} />\r\n      <div className={classes.root} >\r\n        <Row columns=\"1fr 1fr 1fr\">\r\n          <GridColumn data={{ exams: exams.upComingExam, state: 'upcoming', ... props.state }} />\r\n          <GridColumn data={{ exams: exams.runningExam, state: 'running', ... props.state}} />\r\n          <GridColumn data={{ exams: exams.endedExam, state: 'finished', ... props.state }} />\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n}","G:\\ems-frontend\\src\\common\\Loading.js",[],"G:\\ems-frontend\\src\\home\\fieldProfile\\teacherProfile.js",["261"],"import NameTitle from \"../fieldViva/pairTextField\"\r\n\r\nexport default function TeacherProfile(){\r\n    \r\n\r\n    return (\r\n        <div>\r\n             <p> HIII </p>\r\n        </div>\r\n    )\r\n}","G:\\ems-frontend\\src\\home\\fieldProfile\\studentProfile.js",["262","263","264","265","266","267","268","269","270"],"import { getData } from \"../../methods\"\r\nimport NameTitle from \"../fieldViva/pairTextField\"\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nasync function fetchData(setProfileData) {\r\n    // const profileData = await getData('/profileData');\r\n    // // console.log(profileData.body);\r\n    // setProfileData(profileData.body);\r\n}\r\n\r\n\r\nfunction pairDisplay(){\r\n\r\n}\r\n\r\n\r\nexport default function StudentProfile() {\r\n    const [profileData, setProfileData] = useState(null);\r\n\r\n    // fetchData(setprofileData);\r\n    let component =  <p> HIII </p>;\r\n    useEffect(() => fetchData(setProfileData), []);\r\n    if (profileData !== null) {\r\n        const {firstName,lastName,registrationNo,about,email} = profileData;\r\n        console.log(profileData)\r\n        component = \r\n            <p> HIII </p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* { component } */}\r\n        </div>\r\n    )\r\n}","G:\\ems-frontend\\src\\authentication\\formStyle.js",[],"G:\\ems-frontend\\src\\alertBox.js",["271"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n    const {open,setOpen,description} = props.state\r\n    \r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Sorry!\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {description}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","G:\\ems-frontend\\src\\methods.js",["272","273"],"const axios = require('axios');\r\n\r\n// export async function postData(url, packet) {\r\n//     try {\r\n//         // const res = axios.post(url,packet)\r\n//         let res = await fetch('http://localhost:4000' + url, {\r\n//             method: 'post',\r\n//             body: JSON.stringify(packet),\r\n//             headers: { 'Content-Type': 'application/json' }\r\n//         });\r\n//         return { statusCode: res.status, body: await res.json() };\r\n//     } catch (err) {\r\n//          console.log('error: ' +  err);\r\n//     }\r\n// }\r\n\r\n// export async function getData(url) {\r\n\r\n//     // let res = axios.get(url);\r\n//     let res = await fetch('http://localhost:4000' + url);\r\n//     return { statusCode: res.status, body: await res.json() };\r\n    // let dummyData = {\r\n    //     firstName: 'KIRITI',\r\n    //     lastName: \"MUKHERJEE\",\r\n    //     registrationNo: 2017331063,\r\n    //     email: 'kimuapon@gmail.com',\r\n    //     isTeacher: false,\r\n    //     about: `Hi! I'm magic-kiri!`\r\n    // }\r\n    // return { statusCode: 200 , body: dummyData  };\r\n// }\r\n\r\n\r\nasync function postData(url, packet) {\r\n    let res;\r\n    try {\r\n        res = await axios.post('http://localhost:4000' + url, packet )\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log('error');\r\n        return {statusCode: 404};\r\n        // return {statusCode:res.status, body: res.data}\r\n         console.log('error: ' +  err);\r\n    }\r\n}\r\n\r\n\r\nasync function getData(url) {\r\n    console.log(\"ashiteseee!\");\r\n    let res = axios.get('http://localhost:4000' + url);\r\n\r\n    return res.data;\r\n}\r\n\r\n// export default postData;\r\nexport default  {postData,getData}","G:\\ems-frontend\\src\\authentication\\field\\email.js",[],"G:\\ems-frontend\\src\\authentication\\field\\name.js",[],"G:\\ems-frontend\\src\\authentication\\field\\password.js",[],"G:\\ems-frontend\\src\\authentication\\field\\registrationNo.js",[],"G:\\ems-frontend\\src\\home\\fieldViva\\createVivaComponent.js",["274"],"\r\nimport React, { useState } from 'react';\r\nimport { Button, Typography, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport NameTitle from './pairTextField'\r\nimport DatePicker from './datePicker';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport RegPicker from './regPicker';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        // backgroundColor: 'red',\r\n        backgroundColor: '#edfff8',\r\n        border: '0.5px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        width: 600,\r\n        height: 500,\r\n    },\r\n    title: {\r\n        // alignItems: 'center',\r\n        // flex:'center',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: theme.spacing(2),\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Times'\r\n    },\r\n    buttonDiv: {\r\n        // background:'red',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n\r\n}));\r\n\r\nconst initialVivaInfo = {\r\n    courseCode: null,\r\n    courseTitle: null,\r\n    startingRegNo: null,\r\n    endingRegNo: null,\r\n    date: null,\r\n    startTime: null,\r\n    examDuration: null,\r\n}\r\n\r\n\r\n\r\nfunction validateForm(vivaInfo, setVivaInfo) {\r\n    let tempInfo = { ...vivaInfo };\r\n    let isOk = true;\r\n    console.log(tempInfo)\r\n    for (const item in vivaInfo) {\r\n        if (tempInfo[item] === null || tempInfo[item] === '') {\r\n            tempInfo[item] = '';\r\n            isOk = false;\r\n        }\r\n    }\r\n    console.log(tempInfo)\r\n    setVivaInfo(tempInfo)\r\n    return isOk;\r\n}\r\n\r\n\r\nexport default function CreateVivaComponent(props) {\r\n\r\n    const classes = useStyles();\r\n    const [vivaInfo, setVivaInfo] = useState(initialVivaInfo);\r\n    const [step, setStep] = useState(0);\r\n    const { setVivaModal } = props.state;\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.currentTarget\r\n        setVivaInfo({ ...vivaInfo, [name]: value })\r\n    }\r\n\r\n\r\n    const state = {\r\n        vivaInfo: vivaInfo,\r\n        setVivaInfo: setVivaInfo,\r\n        setVivaInfo: setVivaInfo,\r\n        handleChange: handleChange,\r\n        step: step,\r\n        setStep: setStep,\r\n        setVivaModal: setVivaModal,\r\n    };\r\n\r\n\r\n    function submitAction() {\r\n        if (validateForm(vivaInfo, setVivaInfo)) {\r\n            setStep(1);\r\n        }\r\n    }\r\n    const body = ( step===0  ? <div className={classes.root}>\r\n        <div className={classes.title}>\r\n            <Typography className={classes.title}>Create New Viva</Typography>\r\n        </div>\r\n        <div>\r\n            <NameTitle state={{ ...state, name1: 'courseCode', name2: 'courseTitle' }} myLabel={{ label1: 'Course Code', label2: 'Title' }} />\r\n            <br />\r\n            <NameTitle state={{ ...state, name1: 'startingRegNo', name2: 'endingRegNo' }} myLabel={{ label1: 'Starting Registration No.', label2: 'Ending Registration No.' }} />\r\n            <DatePicker state={{ ...state, name1: 'date', name2: 'startTime' }} />\r\n            <br />\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField error={vivaInfo.examDuration === '' ? true : false}\r\n                            variant=\"outlined\" name='examDuration' onChange={handleChange}\r\n                            required fullWidth label='Viva Duration(in minute)' autoFocus\r\n                            value={vivaInfo.examDuration === null ? '' : vivaInfo.examDuration}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <br />\r\n        </div>\r\n        <div className={classes.buttonDiv}>\r\n            <Button color=\"primary\" variant=\"contained\" onClick={() => submitAction()} >Create Viva</Button>\r\n            <Button color=\"secondary\" onClick={() => setVivaModal(false)} className={classes.cancelButton} variant=\"contained\" >Cancel</Button>\r\n        </div>\r\n\r\n    </div>  : <RegPicker state={state}/> )\r\n    return (\r\n        <div>\r\n            {body}\r\n        </div>\r\n    )\r\n}","G:\\ems-frontend\\src\\authentication\\field\\teacherMode.js",[],"G:\\ems-frontend\\src\\Exams\\component\\bottomNavbar.js",["275","276"],"import { useParams } from 'react-router-dom';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useState,useEffect } from 'react';\r\nimport postData from '../../methods/postMethod';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTextField = styled(TextField)`\r\n    .makeStyles-root-22 {\r\n        background-color: transparent;\r\n    }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        backgroundColor: '#edfff8',\r\n        // border: '0.1px solid #000',\r\n        boxShadow: theme.shadows[2],\r\n        // flexGrow: 1,\r\n        height: '15vh',\r\n        // backgroundColor: 'red',\r\n        // backgroundColor: 'green',\r\n        // flexDirection: 'column-reverse',\r\n    },\r\n    packet: {\r\n        \r\n        display: 'flex',\r\n        flexDirection: 'column-reverse',\r\n    },\r\n    button: {\r\n        // height: '100%',\r\n        padding: theme.spacing(2, 4, 3),\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\n\r\nconst BottomNavbar = (props) => {\r\n    let { id } = useParams();\r\n    const classes = useStyles();\r\n    const [question,setQuestion] =  useState('');\r\n    const {render,setRender} = props.state;\r\n    async function askQuestion()\r\n    {\r\n        console.log(\"pressed ask\")\r\n        const res = await postData(`/viva/postQuestion`,{\r\n            question: question,\r\n            authorName: props.user.firstName + ' ' + props.user.lastName,\r\n            authorEmail: props.user.email,\r\n            id: id\r\n        });\r\n        console.log(res);\r\n        if(res.status===200)\r\n            setQuestion('');\r\n        const response = await postData('/question/addQuestion',{question: question, email: localStorage.getItem('email') });\r\n        setRender((render+1)%100000); \r\n    }\r\n    return (\r\n        <div style={{borderTop: '1px solid #ececec'}} className={classes.packet}>\r\n            <div className={classes.packet}>\r\n\r\n                <div className={classes.button}>\r\n                    <StyledTextField\r\n                        required fullWidth label='Question' autoFocus value={question}\r\n                        onChange = {(event)=>{setQuestion(event.currentTarget.value)}}\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\"  onClick = {askQuestion} >Ask</Button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.app.user,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(BottomNavbar)","G:\\ems-frontend\\src\\authentication\\field\\copyright.js",[],"G:\\ems-frontend\\src\\Exams\\component\\questions.js",["277","278","279"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport postData from '../../methods/postMethod';\r\nimport styled from 'styled-components';\r\n\r\nimport { Typography, Button, Divider } from '@material-ui/core';\r\n\r\n\r\nconst StyledTextField = styled(TextField)`\r\n    .makeStyles-root-22 {\r\n        background-color: transparent;\r\n    }\r\n`;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // backgroundColor: 'green',\r\n        height: '75vh',\r\n        overflowY: 'scroll',\r\n    },\r\n    parent: {\r\n        minWidth: 200,\r\n        margin: \"2%\",\r\n        boxShadow: theme.shadows[5],\r\n    },\r\n    // bullet: {\r\n    //     display: 'inline-block',\r\n    //     margin: '0 2px',\r\n    //     transform: 'scale(0.8)',\r\n    // },\r\n    question: {\r\n        fontSize: 17,\r\n    },\r\n    comment: {\r\n        // paddingLeft: 20,\r\n        // backgroundColor: 'red',\r\n        // margin: \"2%\",\r\n        paddingTop: 5,\r\n        fontSize: 12,\r\n    },\r\n    inp: {\r\n        // backgroundColor: 'green',\r\n        minWidth: '85%'\r\n    }\r\n\r\n}));\r\n\r\n\r\nexport default function Questions(props) {\r\n    const classes = useStyles();\r\n    const { id, questions, setQuestions } = props.state;\r\n    const { render, setRender } = props.state;\r\n\r\n    \r\n    async function loadQuestion() {\r\n        const res = await postData(`/viva/getVivaHistory`, { id: id })\r\n        if (res.status === 200) {\r\n            const { questions } = res.body;\r\n            if(questions === undefined)\r\n            {\r\n\r\n            }\r\n            else\r\n            {\r\n                const newState = questions.map(element => {\r\n                    element.inputComment = \"\";\r\n                    return element;\r\n                })\r\n                console.log(newState === questions);\r\n                setQuestions(newState);\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        // const id = setInterval(loadQuestion,3000);\r\n        loadQuestion();\r\n        return () => {\r\n            clearInterval(id);\r\n        }\r\n    }, [])\r\n    \r\n    useEffect(()=>{\r\n        loadQuestion();\r\n    },[render]);\r\n    \r\n    // loadQuestion();\r\n    \r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            {\r\n                questions &&\r\n                questions.map((element, idx) => (\r\n                    <Card className={classes.parent}>\r\n                        <CardContent >\r\n                            <Typography className={classes.question} color=\"textPrimary\" gutterBottom>{element.question}</Typography>\r\n                            <Divider /><Divider />\r\n                            <Typography className={classes.question} color=\"textPrimary\" gutterBottom>Ask By {element.authorName}</Typography>\r\n                            {\r\n                                element.comments.map(reply =>\r\n                                    <Typography className={classes.comment} color=\"textPrimary\" gutterBottom>{reply.comment}</Typography>)\r\n                            }\r\n                        </CardContent>\r\n                        {\r\n                            <CardActions>\r\n                                <StyledTextField style={{ backgroundColor: 'white' }} id=\"standard-basic\" label=\"Write a comment. . .\" value={element.inputComment}\r\n                                    onChange={(event) => {\r\n                                        let newState = [...questions];\r\n                                        newState[idx].inputComment = event.currentTarget.value;\r\n                                        setQuestions(newState);\r\n                                    }} />\r\n                                <Button  variant=\"contained\" color=\"inherit\" size=\"small\" onClick={async () => {\r\n                                    await postData('/viva/postComment', {\r\n                                        id: id, question: element.question,\r\n                                        comment: element.inputComment,\r\n                                        email: localStorage.getItem('email')\r\n                                    })\r\n                                    setRender((render + 1) % 100000);\r\n                                }}>Comment</Button>\r\n                            </CardActions>\r\n                        }\r\n                    </Card>))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","G:\\ems-frontend\\src\\home\\fieldHome\\sectionTop.js",[],"G:\\ems-frontend\\src\\home\\fieldViva\\pairTextField.js",[],"G:\\ems-frontend\\src\\home\\fieldHome\\column.js",["280"],"\r\n\r\n\r\nimport '../style.css'\r\nimport {Grid } from '@material-ui/core';\r\nimport Exam from './exam';\r\n\r\nexport default function GridColumn(props) {\r\n    const { exams,state } = props.data;\r\n    let details = {...props.data};\r\n    delete details.exams;\r\n    const component = exams.map((exam) => <Exam key={exam._id} data={{ ...details, exam: exam}}/>)\r\n    \r\n    return (\r\n        <Grid item>\r\n            {component}\r\n        </Grid>\r\n    )\r\n}","G:\\ems-frontend\\src\\Exams\\component\\leftNavBar.js",["281","282","283","284","285","286"],"G:\\ems-frontend\\src\\Exams\\component\\rightNavBar.js",["287","288","289","290","291","292","293"],"G:\\ems-frontend\\src\\home\\fieldViva\\regPicker.js",["294","295","296","297","298"],"G:\\ems-frontend\\src\\home\\fieldHome\\exam.js",["299","300","301","302","303","304","305"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport getData from '../../methods/getMethod';\r\nimport postData from '../../methods/postMethod';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 300,\r\n        margin: theme.spacing(2),\r\n        padding: theme.spacing(1),\r\n        display: 'flex',\r\n    },\r\n    title: {\r\n        // flex:'center',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Times'\r\n    },\r\n    text: {\r\n        fontSize: 14,\r\n        fontFamily: 'Times'\r\n    },\r\n    date: {\r\n        fontSize: 14,\r\n        fontFamily: 'Times',\r\n        color: '#1780ad',\r\n    }\r\n}));\r\n\r\nconst StyledLink = styled(Link)`\r\n    text-decoration: none;\r\n`;\r\n\r\nexport default function Exam(props) {\r\n    const classes = useStyles();\r\n\r\n    const { courseCode, courseTeacher, courseTitle, date, startTime, endTime, _id, email } = props.data.exam;\r\n    const { state, setStudentModal, studentModal } = props.data;\r\n    \r\n    let textDate, btnText;\r\n\r\n    if (state === 'running') {\r\n        btnText = 'Enter';\r\n        textDate = (<Typography className={classes.date} >RUNNING</Typography>);\r\n    }\r\n    else {\r\n        btnText = 'Details';\r\n        textDate = (<div>{`Date: ${date}`} </div>);\r\n    }\r\n\r\n    const link = \"/\"+btnText.toLocaleLowerCase()+\"/\"+_id;\r\n      \r\n    \r\n    async function buttonClicked(event) {\r\n        const teacherMode = (localStorage.getItem('teacherMode') == 'true');\r\n        if (teacherMode == false) {\r\n            if (state === 'running') {\r\n                console.log(\"JOIN KORTE CHAY\");\r\n                console.log(localStorage.getItem('email'));\r\n                const res = await postData(`/exam/joinRequest`,{email: localStorage.getItem('email') , id : _id });\r\n                console.log(res);\r\n            }\r\n            else if (state == 'upcoming') {\r\n                const res = await getData(`/exam/details/${_id}`);\r\n                console.log('button pressed!!');\r\n                if (res.status === 200) {\r\n                    const schedule = res.body;\r\n                    let details = {\r\n                        open : true,\r\n                        header: 'Exam Schedule',\r\n                        body : res.body,\r\n                        valueType: 'Viva Schedule'\r\n                    }\r\n                    console.log(details);\r\n                    setStudentModal(details);\r\n                }\r\n                else\r\n                {\r\n                    console.log('not working!');\r\n                }\r\n            }\r\n            else {\r\n\r\n            }\r\n        }\r\n        else {\r\n            if (state === 'running') {\r\n\r\n            }\r\n            else if (state == 'upcoming') {\r\n\r\n            }\r\n            else {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root} style={{ boxShadow: '2px 2px 5px #bcbcbc' }}>\r\n            <CardContent >\r\n                <Typography className={classes.title} gutterBottom>{courseCode + ': ' + courseTitle}</Typography>\r\n                <Typography className={classes.text}>\r\n                    {'by ' + courseTeacher}\r\n                    <br />\r\n                    {textDate}\r\n                </Typography>\r\n                <Typography className={classes.text}>\r\n                    {`From ${startTime} to ${endTime}`}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions>\r\n              <StyledLink to={link}>  <Button  color=\"primary\" variant=\"contained\" size=\"small\" onClick={buttonClicked}>{btnText}</Button></StyledLink>\r\n              {state === 'running' && <StyledLink to={`/details/${_id}`}>  <Button  color=\"primary\" variant=\"contained\" size=\"small\" onClick={buttonClicked}>Details</Button></StyledLink>}\r\n                {/* <Button color=\"primary\" variant=\"contained\" size=\"small\" onClick={buttonClicked}>{btnText}</Button> */}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}","G:\\ems-frontend\\src\\home\\fieldViva\\datePicker.js",[],"G:\\ems-frontend\\src\\utils\\comon.functions.js",[],"G:\\ems-frontend\\src\\methods\\putMethod.js",[],"G:\\ems-frontend\\src\\home\\modal\\detailsModal.js",[],"G:\\ems-frontend\\src\\home\\modal\\detailsModalComponent.js",["306","307","308","309"],"\r\n\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Typography, Grid } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        backgroundColor: '#edfff8',\r\n        border: '0.5px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        width: 500,\r\n        height: 550,\r\n    },\r\n    title: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: theme.spacing(0.5),\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Times'\r\n    },\r\n    container: {\r\n        overflowY: 'scroll',\r\n        height: 400,\r\n    },\r\n    box: {\r\n        boxShadow: theme.shadows[4],\r\n        justifyContent: 'space-around',\r\n        display: 'flex',\r\n        width: 450,\r\n        height: 45,\r\n        paddingLeft: 15,\r\n        // paddingRight: ,\r\n    },\r\n    roll: {\r\n        color: '#06046b',\r\n        paddingLeft: 40,\r\n        paddingTop: 13,\r\n        borderBottom: 2,\r\n        borderTop: 2,\r\n    },\r\n    value: {\r\n        color: '#046b26',\r\n        paddingLeft: 40,\r\n        paddingTop: 13,\r\n        borderBottom: 2,\r\n        borderTop: 2,\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        // padding: theme.spacing(0.5),\r\n        fontSize: 19,\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Times',\r\n        paddingTop: 6,\r\n        borderBottom: 2,\r\n    },\r\n    headerContainer: {\r\n        height: 50,\r\n    },\r\n    lastSection: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function DetailsComponent(props) {\r\n    const classes = useStyles();\r\n    const { header, body, valueType } = props.state.studentModal;\r\n    const { setStudentModal } = props.state;\r\n\r\n    console.log(props.state);\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.title}>\r\n                <Typography className={classes.title}>{header}</Typography>\r\n            </div>\r\n            <div >\r\n                <div className={classes.headerContainer}>\r\n                    <div className={classes.box}>\r\n                        <Typography className={classes.header}>{'Registration Number'}</Typography>\r\n                        <Typography className={classes.header}>{valueType}</Typography>\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n                <div className={classes.container}>\r\n                    {body.map((element) =>\r\n                    (<div className={classes.box}>\r\n                        <Typography className={classes.roll}>{element.reg}</Typography>\r\n                        <Typography className={classes.value}>{element.value}</Typography>\r\n                        <br />\r\n                    </div>))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={classes.lastSection}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => setStudentModal({ open: false })}>Back</Button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}",{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":24,"column":6,"nodeType":"316","endLine":24,"endColumn":38,"suggestions":"317"},{"ruleId":"318","severity":1,"message":"319","line":26,"column":10,"nodeType":"320","messageId":"321","endLine":26,"endColumn":14},{"ruleId":"318","severity":1,"message":"322","line":26,"column":16,"nodeType":"320","messageId":"321","endLine":26,"endColumn":23},{"ruleId":"318","severity":1,"message":"323","line":2,"column":10,"nodeType":"320","messageId":"321","endLine":2,"endColumn":16},{"ruleId":"318","severity":1,"message":"324","line":46,"column":12,"nodeType":"320","messageId":"321","endLine":46,"endColumn":22},{"ruleId":"318","severity":1,"message":"325","line":7,"column":8,"nodeType":"320","messageId":"321","endLine":7,"endColumn":15},{"ruleId":"318","severity":1,"message":"326","line":8,"column":10,"nodeType":"320","messageId":"321","endLine":8,"endColumn":19},{"ruleId":"318","severity":1,"message":"327","line":27,"column":7,"nodeType":"320","messageId":"321","endLine":27,"endColumn":19},{"ruleId":"318","severity":1,"message":"328","line":50,"column":12,"nodeType":"320","messageId":"321","endLine":50,"endColumn":16},{"ruleId":"318","severity":1,"message":"329","line":50,"column":18,"nodeType":"320","messageId":"321","endLine":50,"endColumn":25},{"ruleId":"314","severity":1,"message":"330","line":52,"column":37,"nodeType":"316","endLine":52,"endColumn":49,"suggestions":"331"},{"ruleId":"318","severity":1,"message":"332","line":32,"column":12,"nodeType":"320","messageId":"321","endLine":32,"endColumn":23},{"ruleId":"318","severity":1,"message":"333","line":32,"column":25,"nodeType":"320","messageId":"321","endLine":32,"endColumn":39},{"ruleId":"314","severity":1,"message":"334","line":39,"column":8,"nodeType":"316","endLine":39,"endColumn":10,"suggestions":"335"},{"ruleId":"314","severity":1,"message":"336","line":25,"column":8,"nodeType":"316","endLine":25,"endColumn":10,"suggestions":"337"},{"ruleId":"318","severity":1,"message":"338","line":11,"column":10,"nodeType":"320","messageId":"321","endLine":11,"endColumn":26},{"ruleId":"318","severity":1,"message":"327","line":28,"column":7,"nodeType":"320","messageId":"321","endLine":28,"endColumn":19},{"ruleId":"318","severity":1,"message":"328","line":68,"column":12,"nodeType":"320","messageId":"321","endLine":68,"endColumn":16},{"ruleId":"318","severity":1,"message":"329","line":68,"column":18,"nodeType":"320","messageId":"321","endLine":68,"endColumn":25},{"ruleId":"314","severity":1,"message":"330","line":70,"column":37,"nodeType":"316","endLine":70,"endColumn":39,"suggestions":"339"},{"ruleId":"318","severity":1,"message":"340","line":3,"column":8,"nodeType":"320","messageId":"321","endLine":3,"endColumn":15},{"ruleId":"318","severity":1,"message":"323","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":14},{"ruleId":"318","severity":1,"message":"341","line":10,"column":8,"nodeType":"320","messageId":"321","endLine":10,"endColumn":21},{"ruleId":"318","severity":1,"message":"325","line":22,"column":8,"nodeType":"320","messageId":"321","endLine":22,"endColumn":15},{"ruleId":"318","severity":1,"message":"342","line":5,"column":27,"nodeType":"320","messageId":"321","endLine":5,"endColumn":36},{"ruleId":"318","severity":1,"message":"323","line":8,"column":22,"nodeType":"320","messageId":"321","endLine":8,"endColumn":28},{"ruleId":"318","severity":1,"message":"343","line":3,"column":10,"nodeType":"320","messageId":"321","endLine":3,"endColumn":14},{"ruleId":"314","severity":1,"message":"344","line":27,"column":13,"nodeType":"345","endLine":44,"endColumn":4},{"ruleId":"346","severity":1,"message":"347","line":46,"column":9,"nodeType":"348","messageId":"349","endLine":46,"endColumn":11},{"ruleId":"350","severity":1,"message":"351","line":55,"column":80,"nodeType":"352","messageId":"353","endLine":55,"endColumn":81,"fix":"354"},{"ruleId":"350","severity":1,"message":"351","line":56,"column":78,"nodeType":"352","messageId":"353","endLine":56,"endColumn":79,"fix":"355"},{"ruleId":"350","severity":1,"message":"351","line":57,"column":77,"nodeType":"352","messageId":"353","endLine":57,"endColumn":78,"fix":"356"},{"ruleId":"318","severity":1,"message":"357","line":1,"column":8,"nodeType":"320","messageId":"321","endLine":1,"endColumn":17},{"ruleId":"318","severity":1,"message":"325","line":1,"column":10,"nodeType":"320","messageId":"321","endLine":1,"endColumn":17},{"ruleId":"318","severity":1,"message":"357","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":17},{"ruleId":"318","severity":1,"message":"358","line":12,"column":10,"nodeType":"320","messageId":"321","endLine":12,"endColumn":21},{"ruleId":"318","severity":1,"message":"359","line":24,"column":16,"nodeType":"320","messageId":"321","endLine":24,"endColumn":25},{"ruleId":"318","severity":1,"message":"360","line":24,"column":26,"nodeType":"320","messageId":"321","endLine":24,"endColumn":34},{"ruleId":"318","severity":1,"message":"361","line":24,"column":35,"nodeType":"320","messageId":"321","endLine":24,"endColumn":49},{"ruleId":"318","severity":1,"message":"362","line":24,"column":50,"nodeType":"320","messageId":"321","endLine":24,"endColumn":55},{"ruleId":"318","severity":1,"message":"363","line":24,"column":56,"nodeType":"320","messageId":"321","endLine":24,"endColumn":61},{"ruleId":"318","severity":1,"message":"364","line":26,"column":9,"nodeType":"320","messageId":"321","endLine":26,"endColumn":18},{"ruleId":"318","severity":1,"message":"365","line":12,"column":11,"nodeType":"320","messageId":"321","endLine":12,"endColumn":26},{"ruleId":"366","severity":1,"message":"367","line":43,"column":10,"nodeType":"368","messageId":"369","endLine":43,"endColumn":40},{"ruleId":"370","severity":1,"message":"371","line":56,"column":1,"nodeType":"372","endLine":56,"endColumn":35},{"ruleId":"373","severity":1,"message":"374","line":84,"column":9,"nodeType":"375","messageId":"349","endLine":84,"endColumn":20},{"ruleId":"318","severity":1,"message":"342","line":4,"column":26,"nodeType":"320","messageId":"321","endLine":4,"endColumn":35},{"ruleId":"318","severity":1,"message":"376","line":63,"column":15,"nodeType":"320","messageId":"321","endLine":63,"endColumn":23},{"ruleId":"318","severity":1,"message":"377","line":2,"column":28,"nodeType":"320","messageId":"321","endLine":2,"endColumn":36},{"ruleId":"314","severity":1,"message":"378","line":86,"column":8,"nodeType":"316","endLine":86,"endColumn":10,"suggestions":"379"},{"ruleId":"314","severity":1,"message":"330","line":90,"column":7,"nodeType":"316","endLine":90,"endColumn":15,"suggestions":"380"},{"ruleId":"318","severity":1,"message":"381","line":9,"column":19,"nodeType":"320","messageId":"321","endLine":9,"endColumn":24},{"ruleId":"318","severity":1,"message":"323","line":8,"column":34,"nodeType":"320","messageId":"321","endLine":8,"endColumn":40},{"ruleId":"318","severity":1,"message":"382","line":19,"column":10,"nodeType":"320","messageId":"321","endLine":19,"endColumn":16},{"ruleId":"318","severity":1,"message":"383","line":20,"column":10,"nodeType":"320","messageId":"321","endLine":20,"endColumn":28},{"ruleId":"318","severity":1,"message":"384","line":21,"column":10,"nodeType":"320","messageId":"321","endLine":21,"endColumn":31},{"ruleId":"314","severity":1,"message":"385","line":122,"column":8,"nodeType":"316","endLine":122,"endColumn":31,"suggestions":"386"},{"ruleId":"314","severity":1,"message":"334","line":130,"column":8,"nodeType":"316","endLine":130,"endColumn":10,"suggestions":"387"},{"ruleId":"318","severity":1,"message":"388","line":26,"column":10,"nodeType":"320","messageId":"321","endLine":26,"endColumn":24},{"ruleId":"318","severity":1,"message":"389","line":27,"column":8,"nodeType":"320","messageId":"321","endLine":27,"endColumn":19},{"ruleId":"318","severity":1,"message":"328","line":84,"column":23,"nodeType":"320","messageId":"321","endLine":84,"endColumn":27},{"ruleId":"318","severity":1,"message":"390","line":124,"column":15,"nodeType":"320","messageId":"321","endLine":124,"endColumn":18},{"ruleId":"318","severity":1,"message":"390","line":129,"column":15,"nodeType":"320","messageId":"321","endLine":129,"endColumn":18},{"ruleId":"318","severity":1,"message":"390","line":136,"column":15,"nodeType":"320","messageId":"321","endLine":136,"endColumn":18},{"ruleId":"318","severity":1,"message":"390","line":140,"column":15,"nodeType":"320","messageId":"321","endLine":140,"endColumn":18},{"ruleId":"318","severity":1,"message":"343","line":1,"column":30,"nodeType":"320","messageId":"321","endLine":1,"endColumn":34},{"ruleId":"314","severity":1,"message":"391","line":79,"column":9,"nodeType":"316","endLine":79,"endColumn":11,"suggestions":"392"},{"ruleId":"393","severity":1,"message":"394","line":84,"column":17,"nodeType":"395","messageId":"349","endLine":84,"endColumn":19},{"ruleId":"393","severity":1,"message":"396","line":92,"column":44,"nodeType":"395","messageId":"349","endLine":92,"endColumn":46},{"ruleId":"393","severity":1,"message":"394","line":93,"column":18,"nodeType":"395","messageId":"349","endLine":93,"endColumn":20},{"ruleId":"318","severity":1,"message":"363","line":44,"column":84,"nodeType":"320","messageId":"321","endLine":44,"endColumn":89},{"ruleId":"318","severity":1,"message":"397","line":45,"column":37,"nodeType":"320","messageId":"321","endLine":45,"endColumn":49},{"ruleId":"393","severity":1,"message":"396","line":62,"column":66,"nodeType":"395","messageId":"349","endLine":62,"endColumn":68},{"ruleId":"393","severity":1,"message":"396","line":63,"column":25,"nodeType":"395","messageId":"349","endLine":63,"endColumn":27},{"ruleId":"393","severity":1,"message":"396","line":70,"column":28,"nodeType":"395","messageId":"349","endLine":70,"endColumn":30},{"ruleId":"318","severity":1,"message":"398","line":74,"column":27,"nodeType":"320","messageId":"321","endLine":74,"endColumn":35},{"ruleId":"393","severity":1,"message":"396","line":97,"column":28,"nodeType":"395","messageId":"349","endLine":97,"endColumn":30},{"ruleId":"318","severity":1,"message":"377","line":3,"column":17,"nodeType":"320","messageId":"321","endLine":3,"endColumn":25},{"ruleId":"318","severity":1,"message":"343","line":5,"column":30,"nodeType":"320","messageId":"321","endLine":5,"endColumn":34},{"ruleId":"318","severity":1,"message":"399","line":6,"column":8,"nodeType":"320","messageId":"321","endLine":6,"endColumn":18},{"ruleId":"318","severity":1,"message":"400","line":7,"column":8,"nodeType":"320","messageId":"321","endLine":7,"endColumn":18},"no-native-reassign",["401"],"no-negated-in-lhs",["402"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'localStorage.token' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["403"],"no-unused-vars","'page' is assigned a value but never used.","Identifier","unusedVar","'setPage' is assigned a value but never used.","'Button' is defined but never used.","'btnClicked' is defined but never used.","'getData' is defined but never used.","'useParams' is defined but never used.","'RightWrapper' is assigned a value but never used.","'exam' is assigned a value but never used.","'setExam' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadQuestion'. Either include it or remove the dependency array.",["404"],"'profileInfo' is assigned a value but never used.","'setProfileInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["405"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["406"],"'CircularProgress' is defined but never used.",["407"],"'Toolbar' is defined but never used.","'ArrowBackIcon' is defined but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","FunctionExpression","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"408","text":"409"},{"range":"410","text":"409"},{"range":"411","text":"409"},"'NameTitle' is defined but never used.","'pairDisplay' is defined but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'registrationNo' is assigned a value but never used.","'about' is assigned a value but never used.","'email' is assigned a value but never used.","'component' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'setVivaInfo'.","ObjectExpression","'response' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'loadQuestion'. Either include them or remove the dependency array.",["412"],["413"],"'state' is assigned a value but never used.","'Center' is defined but never used.","'FormatListNumbered' is defined but never used.","'formatTimeFromSeconds' is defined but never used.","React Hook useEffect has a missing dependency: 'setStopWatchTime'. Either include it or remove the dependency array. If 'setStopWatchTime' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["414"],["415"],"'setCurrentExam' is defined but never used.","'examDetails' is defined but never used.","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'endingRegNo' and 'startingRegNo'. Either include them or remove the dependency array.",["416"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","Expected '===' and instead saw '=='.","'studentModal' is assigned a value but never used.","'schedule' is assigned a value but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},[1565,1566],"",[1662,1663],[1757,1758],{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"421","fix":"433"},{"desc":"434","fix":"435"},"Update the dependencies array to be: [user.email, dispatch]",{"range":"436","text":"437"},"Update the dependencies array to be: [loadQuestion, user.email]",{"range":"438","text":"439"},"Update the dependencies array to be: [id]",{"range":"440","text":"441"},"Update the dependencies array to be: [dispatch, id]",{"range":"442","text":"443"},"Update the dependencies array to be: [loadQuestion]",{"range":"444","text":"445"},"Update the dependencies array to be: [id, loadQuestion]",{"range":"446","text":"447"},"Update the dependencies array to be: [loadQuestion, render]",{"range":"448","text":"449"},"Update the dependencies array to be: [alive, setStopWatchTime, viva.startTime]",{"range":"450","text":"451"},{"range":"452","text":"441"},"Update the dependencies array to be: [endingRegNo, startingRegNo]",{"range":"453","text":"454"},[950,982],"[user.email, dispatch]",[1484,1496],"[loadQuestion, user.email]",[1194,1196],"[id]",[835,837],"[dispatch, id]",[2024,2026],"[loadQuestion]",[2290,2292],"[id, loadQuestion]",[2353,2361],"[loadQuestion, render]",[3229,3252],"[alive, setStopWatchTime, viva.startTime]",[3426,3428],[2113,2115],"[endingRegNo, startingRegNo]"]