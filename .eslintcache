[{"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/index.js":"1","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/store.js":"2","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/reportWebVitals.js":"3","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/App.js":"4","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/rootReducer.js":"5","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/profile.js":"6","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/frontPage.js":"7","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/enterExam.js":"8","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/examDetails.js":"9","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/reducers/actions.js":"10","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/homePage.js":"11","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/QuestionBank/questionBank.js":"12","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/reducers/reducer.js":"13","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/teacherView.js":"14","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/appBar.js":"15","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/studentView.js":"16","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/formPage.js":"17","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/createViva.js":"18","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/reducers/constants.js":"19","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/methods/postMethod.js":"20","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldProfile/teacherProfile.js":"21","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldProfile/studentProfile.js":"22","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/methods/getMethod.js":"23","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/utils/api.js":"24","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/utils/styles.js":"25","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/common/Loading.js":"26","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldHome/body.js":"27","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/alertBox.js":"28","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/component/bottomNavbar.js":"29","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/component/questions.js":"30","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/component/rightNavBar.js":"31","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/component/leftNavBar.js":"32","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/field/copyright.js":"33","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldViva/createVivaComponent.js":"34","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldHome/column.js":"35","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldHome/sectionTop.js":"36","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/methods.js":"37","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldViva/pairTextField.js":"38","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/field/teacherMode.js":"39","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/field/password.js":"40","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/field/name.js":"41","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/field/registrationNo.js":"42","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/field/email.js":"43","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/formStyle.js":"44","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldViva/regPicker.js":"45","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldHome/exam.js":"46","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldViva/datePicker.js":"47","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/utils/comon.functions.js":"48","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/methods/putMethod.js":"49","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/modal/DetailsModal.js":"50","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/modal/detailsModalComponent.js":"51"},{"size":714,"mtime":1627664824617,"results":"52","hashOfConfig":"53"},{"size":651,"mtime":1627664824617,"results":"54","hashOfConfig":"53"},{"size":362,"mtime":1624500470796,"results":"55","hashOfConfig":"53"},{"size":2107,"mtime":1627664824613,"results":"56","hashOfConfig":"53"},{"size":281,"mtime":1627664824617,"results":"57","hashOfConfig":"53"},{"size":1793,"mtime":1627664824617,"results":"58","hashOfConfig":"53"},{"size":1798,"mtime":1627664824613,"results":"59","hashOfConfig":"53"},{"size":1497,"mtime":1627664824613,"results":"60","hashOfConfig":"53"},{"size":3590,"mtime":1627664824613,"results":"61","hashOfConfig":"53"},{"size":422,"mtime":1627664824617,"results":"62","hashOfConfig":"53"},{"size":1115,"mtime":1627665265439,"results":"63","hashOfConfig":"53"},{"size":3039,"mtime":1627664824613,"results":"64","hashOfConfig":"53"},{"size":614,"mtime":1627664824617,"results":"65","hashOfConfig":"53"},{"size":2057,"mtime":1627664824613,"results":"66","hashOfConfig":"53"},{"size":3341,"mtime":1627664824613,"results":"67","hashOfConfig":"53"},{"size":3695,"mtime":1627664824613,"results":"68","hashOfConfig":"53"},{"size":5878,"mtime":1627664824613,"results":"69","hashOfConfig":"53"},{"size":766,"mtime":1624500470796,"results":"70","hashOfConfig":"53"},{"size":188,"mtime":1627664824617,"results":"71","hashOfConfig":"53"},{"size":517,"mtime":1627664824617,"results":"72","hashOfConfig":"53"},{"size":176,"mtime":1624500470796,"results":"73","hashOfConfig":"53"},{"size":862,"mtime":1624500470796,"results":"74","hashOfConfig":"53"},{"size":324,"mtime":1624557995057,"results":"75","hashOfConfig":"53"},{"size":233,"mtime":1627664824617,"results":"76","hashOfConfig":"53"},{"size":671,"mtime":1627664824617,"results":"77","hashOfConfig":"53"},{"size":226,"mtime":1627664824613,"results":"78","hashOfConfig":"53"},{"size":1764,"mtime":1627664824617,"results":"79","hashOfConfig":"53"},{"size":1369,"mtime":1624500470796,"results":"80","hashOfConfig":"53"},{"size":2547,"mtime":1627664824613,"results":"81","hashOfConfig":"53"},{"size":4452,"mtime":1627664824613,"results":"82","hashOfConfig":"53"},{"size":8849,"mtime":1627664824613,"results":"83","hashOfConfig":"53"},{"size":5893,"mtime":1627664824613,"results":"84","hashOfConfig":"53"},{"size":434,"mtime":1624500470796,"results":"85","hashOfConfig":"53"},{"size":4048,"mtime":1627664812637,"results":"86","hashOfConfig":"53"},{"size":423,"mtime":1624500470796,"results":"87","hashOfConfig":"53"},{"size":1118,"mtime":1624500470796,"results":"88","hashOfConfig":"53"},{"size":1583,"mtime":1624500470796,"results":"89","hashOfConfig":"53"},{"size":1013,"mtime":1624500470796,"results":"90","hashOfConfig":"53"},{"size":574,"mtime":1624500470796,"results":"91","hashOfConfig":"53"},{"size":619,"mtime":1624500470796,"results":"92","hashOfConfig":"53"},{"size":1197,"mtime":1624500470796,"results":"93","hashOfConfig":"53"},{"size":592,"mtime":1624500470796,"results":"94","hashOfConfig":"53"},{"size":584,"mtime":1624500470796,"results":"95","hashOfConfig":"53"},{"size":549,"mtime":1624500470796,"results":"96","hashOfConfig":"53"},{"size":4893,"mtime":1627664824617,"results":"97","hashOfConfig":"53"},{"size":4184,"mtime":1627664824617,"results":"98","hashOfConfig":"53"},{"size":1760,"mtime":1624500470796,"results":"99","hashOfConfig":"53"},{"size":317,"mtime":1627664824617,"results":"100","hashOfConfig":"53"},{"size":515,"mtime":1627664824617,"results":"101","hashOfConfig":"53"},{"size":845,"mtime":1624500470796,"results":"102","hashOfConfig":"53"},{"size":3182,"mtime":1624500470796,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hfp5g5",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":3,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/index.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/store.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/reportWebVitals.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/App.js",["229","230","231"],"import './App.css';\nimport jwt from 'jsonwebtoken';\nimport React, { useState, useEffect } from 'react';\nimport FrontPage from './authentication/frontPage';\nimport HomePage from './home/homePage';\nimport EnterExam from './Exams/enterExam';\nimport { Switch, Route } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { setTeacherMode, setUserAction } from './reducers/actions';\nimport ExamDetails from './Exams/examDetails';\nimport Profile from './home/profile';\nimport QuestionBank from './QuestionBank/questionBank';\nconst App = ({ user, dispatch }) => {\n  const isLoggedIn = user.email;\n  useEffect(() => {\n    if (!user.email && localStorage.token) {\n      try {\n        console.log('decoded', jwt.decode(localStorage.token))\n        const userObj = jwt.decode(localStorage.token);\n        dispatch(setUserAction(userObj))\n        dispatch(setTeacherMode(userObj.teacherMode))\n      } catch (e) {}\n    }\n  }, [user.email, localStorage.token]);\n  \n  const [page, setPage] = useState(<div></div>);\n  // useEffect(() => {\n  //   const url = window.location.pathname;\n  //   if (url === '/') setPage(HomePage);\n  //   if (url.includes('enter')) setPage(EnterExam);\n  // }, [window.location.pathname])\n  if (isLoggedIn) {\n    // return <Switch><Route path=\"*\" component={page} /></Switch>;\n    return (\n      <Switch>\n        <Route\n          path='/enter/:id'\n          component={EnterExam}\n        />\n        <Route\n          path='/details/:id'\n          component={ExamDetails}\n        />\n        <Route\n          path='/profile/:id'\n          component={Profile}\n        />\n        <Route\n          path='/questionBank'\n          component={QuestionBank}\n        />\n        <Route\n          path='/'\n          component={HomePage}\n        />\n      </Switch>\n    )\n  }\n  else\n  return (\n    <Switch>\n        <Route\n          path='/'\n          component={FrontPage}\n        />\n      </Switch>\n  )\n\n}\nconst mapStateToProps = state => ({\n  user: state.app.user,\n})\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (App);\n\n","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/rootReducer.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/profile.js",["232","233","234"],"import { Card, CardContent } from \"@material-ui/core\"\nimport TeacherProfile from './fieldProfile/teacherProfile'\nimport StudentProfile from \"./fieldProfile/studentProfile\";\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport getData from \"../methods/getMethod\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '90vh',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n    },\n    card: {\n        // minWidth: 300,\n        margin: theme.spacing(2),\n        padding: theme.spacing(1),\n        display: 'flex',\n        justifyContent: 'space-around',\n        // justifyContent: 'space-between',\n    },\n\n}));\n\nfunction Profile(props) {\n    const { id } = useParams();\n    const classes = useStyles();\n    const [profileInfo, setProfileInfo] = useState({});\n    useEffect(() => {\n        getData(`/profile/getProfile/${id}`)\n            .then(data => {\n                console.log('profile ', data.body);\n            })\n        console.log('hii');\n    }, []);\n    let component;\n    if (props.teacherMode) {\n        component = <TeacherProfile />\n    }\n    else {\n        component = <StudentProfile/>\n    }\n    return (\n        <div className={classes.root}>\n            <Card className={classes.card}>\n                <CardContent>\n                    {component}\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    user: state.app.user,\n    teacherMode: state.app.teacherMode,\n  })\n  const mapDispatchToProps = dispatch => ({\n    dispatch,\n  })\n  \n  export default connect(mapStateToProps, mapDispatchToProps) (Profile);\n  \n  ","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/frontPage.js",["235","236"],"import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport FormPage from './formPage';\nimport styled from 'styled-components';\nimport { Row } from '../utils/styles';\n\nconst ExtraLarge = styled.div`\n  font-size: 48px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  margin-top: -120px;\n`;\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 45px;\n`;\n\nconst Container = styled.div`\n  /* background-image: linear-gradient(to right, #f4baff, #f1d7ff); */\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledButton = styled.div`\n  width: fit-content;\n  padding: 20px 30px;;\n  background: rgb(88 127 241);\n  border-radius: 5px;\n  color: white;\n  cursor: pointer;\n`;\n\nconst ImgStyled = styled.img`\n  position: relative;\n  top: -150px;\n`;\n\nfunction FrontPage(props) {\n  const [mode, setMode] = useState('');\n\n  function btnClicked(event) {\n    const { value } = event.currentTarget;\n    setMode(value);\n  }\n\n  let Component = (\n    <Container>\n      <div>\n        <div style={{ textAlign: 'center' }}>\n          <ImgStyled src=\"https://www.sust.edu/images/logo.png\" height={\"140px\"}/>\n        </div>\n        <ExtraLarge>SUST Viva Management System</ExtraLarge>\n        <Center>\n          <Row columns=\"1fr 1fr\" gridGap=\"10px\">\n            <StyledButton onClick={() => setMode(\"signIn\")} > Log In </StyledButton>\n            <StyledButton name=\"button\" onClick={() => setMode(\"signUp\")} > Sign Up </StyledButton>\n          </Row>\n        </Center>\n      </div>\n      \n    </Container>\n  );\n  const state = { formMode: mode, setFormMode: setMode }\n  return (\n    <div>\n      {mode === \"\" ? Component : <FormPage {...state} />}\n    </div>\n  )\n}\n\n\nexport default FrontPage;","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/enterExam.js",["237"],"import React, { useState, useEffect } from 'react';\nimport './styles.css'\nimport MyAppBar from '../home/appBar'\nimport CreateViva from '../home/createViva';\nimport TeacherView from './teacherView';\nimport StudentView from './studentView'\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { getExamByID } from '../utils/api';\nimport { setCurrentExam } from '../reducers/actions';\n\nfunction EnterExam({ dispatch, teacherMode }) {\n\n    const [vivaModal, setVivaModal] = useState(false);\n    const { id } = useParams();\n\n    const [stopWatchTime, setStopWatchTime] = useState(0);\n\n    const state = {\n        vivaModal: vivaModal,\n        setVivaModal: setVivaModal\n    };\n    useEffect(() => {\n        getExamByID(id).then(data => dispatch(setCurrentExam(data.body)));\n    }, []);\n    console.log('hi----------');\n    // if (page === 'profile') {\n    //     body = <Profile className='body' state={state} />;\n    // }\n    let viewComponent;\n    \n    if (teacherMode)\n        viewComponent = <TeacherView setStopWatchTime={setStopWatchTime} stopWatchTime={stopWatchTime} />\n    else\n        viewComponent = <StudentView setStopWatchTime={setStopWatchTime} stopWatchTime={stopWatchTime}/>\n\n    return (\n        <div>\n            <MyAppBar state={state} />\n            <CreateViva state={state} />\n            {viewComponent}\n        </div>\n    )\n}\n\nexport default connect(state => ({ teacherMode: state.app.teacherMode }), dispatch => ({ dispatch })) (EnterExam);\n","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/examDetails.js",["238","239","240","241","242"],"import React, { useState, useEffect } from 'react';\nimport './styles.css'\nimport MyAppBar from '../home/appBar'\nimport CreateViva from '../home/createViva';\nimport _ from 'underscore';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport getData from '../methods/getMethod';\nimport { useParams } from 'react-router';\nimport { Center, Row } from '../utils/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport Loading from '../common/Loading';\n\nconst StyledRow = styled(Row)`\n    height: 40px;\n    padding: 10px 20px;\n    box-shadow: 1px 1px 3px #bbbbbb;\n    border-radius: 5px;\n    margin-bottom: 10px;\n    ${props => props.cardColor && `background: ${props.cardColor};`}\n`;\n\nconst TableWrapper = styled.div`\n    padding: 20px;\n    width: 650px;\n`;\n\nconst RightWrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst Card = ({ isEnded, isRunningNow, value, reg }) => {\n    let status = '';\n    let cardColor = '';\n    if (isRunningNow) {\n        status = 'Running';\n        cardColor = '#ff8282';\n    } else if (isEnded) {\n        status = 'Ended';\n        cardColor = '#efa5ff';\n    } else {\n        status = 'Scheduled';\n        cardColor = '#bfefca';\n    }\n    return (\n        <div>\n            <StyledRow columns=\"1fr 1fr 1fr\" cardColor={cardColor}>\n                <Wrapper>{reg}</Wrapper>\n                <Wrapper>{status}</Wrapper>\n                <Center>\n                    <Wrapper >{value}</Wrapper>\n                </Center>\n            </StyledRow>\n        </div>\n    )\n}\nfunction ExamDetails({ dispatch, teacherMode }) {\n\n    const [vivaModal, setVivaModal] = useState(false);\n    const { id } = useParams();\n    const [ptList, setPtList] = useState([]);\n    const [exam, setExam] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    useEffect(() => loadQuestion(), [])\n    async function loadQuestion() {\n        setIsLoading(true);\n        const response = await getData(`/exam/details/${id}`)\n        if (response.status === 200) {\n            console.log('exam --------------', response.body);\n            setPtList(response.body)\n        }\n        setIsLoading(false);\n\n        // const res = await postData(`/viva/getVivaHistory`, { id: id })\n        // if (res.status === 200) {\n        //     const { questions } = res.body;\n        //     const newState = questions.map(element => {\n        //         element.inputComment = \"\";\n        //         return element;\n        //     })\n        //     setQuestions(newState);\n        // }\n    }\n\n    const state = {\n        vivaModal: vivaModal,\n        setVivaModal: setVivaModal\n    };\n\n    return (\n        <div>\n            <MyAppBar state={state} />\n            <CreateViva state={state} />\n            <Center>\n                <TableWrapper>\n                    <StyledRow columns=\"1fr 1fr 1fr\">\n                        <h3>Registration No</h3>\n                        <h3>Status</h3>\n                        <Center>\n                            <h3>Exam Time</h3>\n                        </Center>\n\n                    </StyledRow>\n                    {isLoading && <Loading />}\n                    {!isLoading && _.map(ptList, pt =>\n                        <Card key={Math.random()} {...pt} />\n                    )} \n                </TableWrapper>\n            </Center>\n            \n            \n        </div>\n    )\n}\n\nexport default connect(state => ({ teacherMode: state.app.teacherMode }), dispatch => ({ dispatch })) (ExamDetails);\n","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/reducers/actions.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/homePage.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/QuestionBank/questionBank.js",["243","244","245","246","247","248"],"import React, { useState, useEffect } from 'react';\nimport MyAppBar from '../home/appBar'\nimport CreateViva from '../home/createViva';\nimport _ from 'underscore';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport getData from '../methods/getMethod';\nimport { useParams } from 'react-router';\nimport { Center, Row } from '../utils/styles';\nimport Loading from '../common/Loading';\nimport postData from '../methods/postMethod';\n\nconst StyledRow = styled(Row)`\n    height: 40px;\n    padding: 10px 20px;\n    box-shadow: 1px 1px 3px #bbbbbb;\n    border-radius: 5px;\n    margin-bottom: 10px;\n    ${props => props.cardColor && `background: ${props.cardColor};`}\n`;\n\nconst TableWrapper = styled.div`\n    padding: 20px;\n    width: 650px;\n`;\n\nconst RightWrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst Card = ({ isEnded, isRunningNow, question }) => {\n    return (\n        <div>\n            <StyledRow columns=\"1fr\" >\n                <Wrapper>{question}</Wrapper>\n            </StyledRow>\n        </div>\n    )\n}\nfunction QuestionBank({ dispatch, user }) {\n\n    const [vivaModal, setVivaModal] = useState(false);\n    const [questions, setQuestions] = useState([]);\n    const [exam, setExam] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    useEffect(() => loadQuestion(), [user.email])\n    async function loadQuestion() {\n        setIsLoading(true);\n        const response = await postData(`/question/getBank`, { email: user.email })\n        if (response.status === 200) {\n            console.log('exam --------------', response.body);\n            setQuestions(response.body)\n        }\n        setIsLoading(false);\n\n        // const res = await postData(`/viva/getVivaHistory`, { id: id })\n        // if (res.status === 200) {\n        //     const { questions } = res.body;\n        //     const newState = questions.map(element => {\n        //         element.inputComment = \"\";\n        //         return element;\n        //     })\n        //     setQuestions(newState);\n        // }\n    }\n\n    const state = {\n        vivaModal: vivaModal,\n        setVivaModal: setVivaModal\n    };\n\n    return (\n        <div>\n            <MyAppBar state={state} />\n            <CreateViva state={state} />\n            <Center>\n                <TableWrapper>\n                    <StyledRow columns=\"1fr\">\n                        <h3>Questions</h3>\n                    </StyledRow>\n                    {isLoading && <Loading />}\n                    {!isLoading && _.map(questions, q =>\n                        <Card key={Math.random()} question={q} />\n                    )} \n                </TableWrapper>\n            </Center>\n            \n            \n        </div>\n    )\n}\nconst mapStateToProps = state => ({\n    user: state.app.user,\n  })\n  const mapDispatchToProps = dispatch => ({\n    dispatch,\n  })\n  \n  export default connect(mapStateToProps, mapDispatchToProps) (QuestionBank);\n  \n  ","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/reducers/reducer.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/teacherView.js",["249"],"\n\n\nimport { connect } from 'react-redux'\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LeftNavBar from './component/leftNavBar';\nimport RightNavBar from './component/rightNavBar'\nimport BottomNavbar from './component/bottomNavbar';\nimport Questions from './component/questions';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        // backgroundColor: 'red',\n        flexGrow: 1,\n        height: '90vh',\n    },\n    leftBar: {\n        // backgroundColor: 'green',\n        boxShadow: theme.shadows[5],\n        // flexGrow: 1,\n        width: '22vw',\n        height: '100%',\n    },\n    mid: {\n        // backgroundColor: 'purple',\n        flexGrow: 1,\n    },\n    rightBar: {\n        // backgroundColor: 'green',\n        boxShadow: theme.shadows[5],\n        // flexGrow: 1,\n        height: '100%',\n        width: '20vw',\n    },\n\n\n}));\n\nconst  TeacherView = (props) => {\n    let { id } = useParams();\n    const [questions, setQuestions] = useState([]);\n\n    const [render,setRender] = useState(0);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.leftBar}>\n                <LeftNavBar {...props} state={{render:render,setRender:setRender}}/>\n            </div>\n            <div className={classes.mid}>\n                <Questions state={{ id: id, questions: questions,setQuestions: setQuestions,render:render,setRender:setRender }} />\n                <BottomNavbar state={{render:render,setRender:setRender}}/>\n            </div>\n            <div className={classes.rightBar}>\n                <RightNavBar {...props} state={{setQuestions:setQuestions,render:render,setRender:setRender}}/>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    user: state.app.user\n})\n  \nconst mapDispatchToProps = dispatch => ({\n    dispatch\n})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherView);\n  ","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/appBar.js",["250","251"],"import { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { setUserAction } from '../reducers/actions';\nimport { push } from 'connected-react-router';\nimport styled from 'styled-components';\nimport { useEffect, useState } from 'react';\nimport getData from '../methods/getMethod';\nimport { Row } from '../utils/styles';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display:\"flex\",\n        height: '10vh',\n        flexGrow: 1,\n    },\n    toolbar: {\n        marginRight: theme.spacing(2),\n        justifyContent: 'flex-end',\n        display: 'flex',\n    }\n}));\nconst StyledButton = styled.div`\n    margin-left: 10px;\n    padding: 10px 10px;\n    cursor: pointer;\n    :hover {\n        background: #5268e0;\n    }\n    display: inline;\n`;\n\nconst MyAppBar = ({ user, dispatch, teacherMode, state }) => {\n    console.log('appbar', user);\n    const classes = useStyles();\n    const { setVivaModal } = state;\n    const [profileLink, setProfileLink] = useState('/profile');\n    const [userName, setUserName] = useState('Loading...');\n    function logOut(){\n        localStorage.removeItem('token');\n        localStorage.removeItem('email');\n        localStorage.removeItem('teacherMode');\n        dispatch(setUserAction({}));\n        dispatch(push('/'));\n    }\n    useEffect(() => {\n        getData(`/profile/getLink?email=${user.email}`)\n            .then(data => {\n                setProfileLink(data.body);\n                console.log('getlin ', data);\n            })\n        console.log('hii');\n    }, [user.email]);\n\n    useEffect(() => {\n        setUserName(user.firstName + \" \" + user.lastName);\n    }, [user.firstName, user.lastName])\n    return (\n        <div className={classes.root}>\n            <AppBar style={{ height: '50px' }} position=\"fixed\">\n                \n                <Row columns=\"1fr 350px\" style={{ marginTop: '15px'}}>\n                    <div>\n                        <StyledButton color=\"inherit\" onClick={(event)=> dispatch(push('/'))} >Home</StyledButton>\n                        {teacherMode && <StyledButton color=\"inherit\" onClick={(event)=>setVivaModal(true)}> Create a New Viva</StyledButton>}\n                        {teacherMode && <StyledButton color=\"inherit\" onClick={(event)=> dispatch(push('/questionBank'))} >Question Bank</StyledButton>}\n                    </div>\n                    \n                    {/* <StyledButton color=\"inherit\" onClick={(event)=> dispatch(push(profileLink))}> Profile</StyledButton> */}\n                    <div style={{  }}>\n                        <h3 style={{ cursor: 'pointer', display: 'inline' }} className={classes.title} onClick={() => dispatch(push(profileLink))}>\n                            {userName}\n                        </h3>\n                        <StyledButton color=\"inherit\" onClick={(event)=> logOut()}>Log Out</StyledButton>\n                    </div>\n                    \n                </Row>\n            </AppBar>\n        </div>\n    );\n}\nconst mapStateToProps = state => {\n    return {\n        teacherMode: state.app.teacherMode,\n        user: state.app.user,\n    }\n}\nexport default connect(mapStateToProps, dispatch => ({ dispatch }))(MyAppBar);","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/studentView.js",["252"],"/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport postData from '../methods/postMethod';\nimport { useParams } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport { Typography, Button, Divider } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport { connect } from 'react-redux';\nimport { setCurrentViva } from '../reducers/actions';\nimport { getViva } from '../utils/api';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        backgroundColor: '#cff8fc',\n        flexGrow: 1,\n        height: '90vh',\n        // overflowY: 'scroll',\n    },\n    parent: {\n        minWidth: 200,\n        margin: \"2%\",\n        boxShadow: theme.shadows[5],\n    },\n    question: {\n        fontSize: 17,\n    },\n    container: {\n        // backgroundColor: 'red',\n        width: '65vw',\n        overflowY: 'scroll',\n    },\n    title: {\n        fontSize: 26,\n        paddingTop: '35vh',\n        paddingLeft: '22vw',\n    }\n}));\n\n\n\n\nfunction StudentView({ dispatch, user }) {\n    const classes = useStyles();\n    const [permission, setPermission] = useState(false);\n\n    let { id } = useParams();\n\n\n    const [questions, setQuestions] = useState([]);\n    useEffect(async () => {\n        const viva = await getViva(id, user.registrationNo);\n        dispatch(setCurrentViva(viva.body || {}));\n    }, [user]);\n    async function loadQuestion() {\n        const response = await postData(`/exam/verifyPermission`, { email: localStorage.getItem('email'), id: id })\n        if (response.status === 200) {\n            console.log(response.body.permission);\n            setPermission(response.body.permission);\n        }\n\n        const res = await postData(`/viva/getVivaHistory`, { id: id })\n        if (res.status === 200) {\n            const { questions } = res.body;\n            const newState = questions.map(element => {\n                element.inputComment = \"\";\n                return element;\n            })\n            setQuestions(newState);\n        }\n    }\n\n    useEffect(() => {\n\n\n        const id = setInterval(loadQuestion, 800);\n        loadQuestion();\n        return () => {\n            clearInterval(id);\n        }\n    }, [])\n\n\n\n\n\n    let component;\n    if (!permission) {\n        component = (\n            <div className={classes.root}>\n                <div className={classes.container}>\n                    <Typography className={classes.title} color=\"textPrimary\" gutterBottom>You Are In Waiting List</Typography>\n                </div>\n            </div>\n        )\n    }\n    else {\n        component = (\n            <div className={classes.root}>\n                <div className={classes.container}>\n                    {\n                        questions &&\n                        questions.map((element, idx) => (\n                            <Card className={classes.parent}>\n                                <CardContent >\n                                    <Typography className={classes.question} color=\"textPrimary\" gutterBottom>{element.question}</Typography>\n                                    <Divider /><Divider />\n\n                                </CardContent>\n                            </Card>))\n                    }\n                </div>\n\n            </div>)\n    }\n\n    return (\n        <div>\n            {component}\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.app.user\n})\n  \nconst mapDispatchToProps = dispatch => ({\n    dispatch\n})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(StudentView);\n  ","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/formPage.js",["253","254"],"\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Container from '@material-ui/core/Container';\nimport useStyles from './formStyle';\n\nimport Name from './field/name';\nimport Email from './field/email';\nimport Password from './field/password';\nimport RegistrationNo from './field/registrationNo';\nimport TeacherMode from './field/teacherMode';\nimport Copyright from './field/copyright';\nimport postData from '../methods/postMethod'\nimport getData from '../methods/getMethod';\n\nimport AlertDialog from '../alertBox';\nimport { setTeacherMode, setUserAction } from '../reducers/actions';\n\n\nconst initialInfo = {\n  firstName: null,\n  lastName: null,\n  email: null,\n  password: null,\n  teacherMode: false,\n  teacherPass: null,\n  registrationNo: null,\n}\n\nconst signInMode = ['email', 'password'];\nconst signUpMode = ['firstName', 'lastName', 'teacherMode', 'teacherPass','registrationNo'];\n\n\nfunction validateForm(formMode, info, setInfo) {\n  let result = true;\n  const tmpData = { ...info }\n  for (let item of signInMode) {\n    if (tmpData[item] === null || tmpData[item] === '') {\n      tmpData[item] = '';\n      result = false;\n    }\n  }\n  if (formMode === 'signUp') {\n    for (let item of signUpMode) {\n      if (item === 'teacherPass') {\n        if (tmpData.teacherMode && (tmpData.teacherPass === null || tmpData.teacherPass === '')) {\n          tmpData[item] = '';\n          result = false;\n        }\n      } else if (item === 'registrationNo') {\n        if (!tmpData.teacherMode && (tmpData.registrationNo === null || tmpData.registrationNo === '')) {\n          tmpData[item] = '';\n          result = false;\n        }\n      }\n      else if ((tmpData[item] === null || tmpData[item] === '')) {\n        tmpData[item] = '';\n        result = false;\n      }\n    }\n  }\n  setInfo(tmpData);\n  return result;\n}\n\n\n\nconst FormPage = ({ formMode, setFormMode, dispatch, teacherMode  }) => {\n  const classes = useStyles();\n  const [alertBox, setAlertBox] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('Nothing!');\n\n  const [info, setInfo] = useState(initialInfo);\n\n  function handleChange(event) {\n    const { name, value, type, checked } = event.currentTarget\n    type === \"checkbox\" ? setInfo({ ...info, [name]: checked }) : setInfo({ ...info, [name]: value })\n  }\n\n  async function submitAction(event) {\n\n    console.log('hi', formMode, info);\n    if (validateForm(formMode, info, setInfo)) {\n      // FETCH DATA\n      if (formMode === 'signIn') {\n        const res = await postData('/logIn', info);\n        if (res.status===200) {\n          localStorage.setItem('token', res.body.token);\n          localStorage.setItem('email', res.body.email);\n          localStorage.setItem('teacherMode',res.body.teacherMode);\n          dispatch(setUserAction(res.body));\n          console.log('here also', res.body);\n          dispatch(setTeacherMode(res.body.teacherMode));\n          setFormMode('');\n        }\n        else {\n          setErrorMsg(res.body);\n          setAlertBox(true);\n        }\n      }\n      else {\n        const res = await postData('/signUp', info);\n        if (res.status === 200)\n          setFormMode('');\n        else {\n          setErrorMsg(res.body);\n          setAlertBox(true);\n        }\n      }\n    }\n  }\n\n  return (\n    <div>\n      <AlertDialog state={{ open: alertBox, setOpen: setAlertBox, description: errorMsg }} />\n      {/* <ArrowBackIcon margin={2} onClick={(event) => setFormMode('')}></ArrowBackIcon> */}\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}><LockOutlinedIcon /></Avatar>\n          <Typography component=\"h1\" variant=\"h5\">{formMode === 'signIn' ? 'Log In' : 'Sign Up'}</Typography>\n\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n\n              {formMode === \"signUp\" && <Name handleChange={handleChange} info={info} />}\n              <Email handleChange={handleChange} info={info} />\n              <Password handleChange={handleChange} info={info} name='password' label='Password' />\n              {formMode === 'signUp' && <TeacherMode info={info} handleChange={handleChange} />}\n              {formMode === 'signUp' && info.teacherMode && <Password handleChange={handleChange} info={info} name='teacherPass' label=\"Teacher's Private Password\" />}\n              {formMode === 'signUp' && !info.teacherMode && <RegistrationNo handleChange={handleChange} info={info} />}\n            </Grid>\n            <Button\n              // type=\"submit\"\n              onClick={(event) => submitAction(event)} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n              {formMode === 'signIn' ? 'Log In' : 'Sign Up'}\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link style={{ cursor: 'pointer' }} onClick={(event) => setFormMode(formMode === 'signIn' ? 'signUp' : 'signIn')} variant=\"body2\">\n                  {formMode === 'signIn' ? `Don't have an account? Sign Up` : 'Already have an account? Sign in'}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n        <Copyright />\n      </Container>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({})\n  \nconst mapDispatchToProps = dispatch => ({\n    dispatch\n})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(FormPage);\n  ","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/createViva.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/reducers/constants.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/methods/postMethod.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldProfile/teacherProfile.js",["255"],"import NameTitle from \"../fieldViva/pairTextField\"\n\nexport default function TeacherProfile(){\n    \n\n    return (\n        <div>\n             <p> HIII </p>\n        </div>\n    )\n}","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldProfile/studentProfile.js",["256","257","258","259","260","261","262","263","264"],"import { getData } from \"../../methods\"\nimport NameTitle from \"../fieldViva/pairTextField\"\nimport React, { useState, useEffect } from 'react'\n\nasync function fetchData(setProfileData) {\n    // const profileData = await getData('/profileData');\n    // // console.log(profileData.body);\n    // setProfileData(profileData.body);\n}\n\n\nfunction pairDisplay(){\n\n}\n\n\nexport default function StudentProfile() {\n    const [profileData, setProfileData] = useState(null);\n\n    // fetchData(setprofileData);\n    let component =  <p> HIII </p>;\n    useEffect(() => fetchData(setProfileData), []);\n    if (profileData !== null) {\n        const {firstName,lastName,registrationNo,about,email} = profileData;\n        console.log(profileData)\n        component = \n            <p> HIII </p>\n    }\n\n    return (\n        <div>\n            {/* { component } */}\n        </div>\n    )\n}","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/methods/getMethod.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/utils/api.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/utils/styles.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/common/Loading.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldHome/body.js",["265","266","267","268","269","270"],"\n\nimport { Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridColumn from './column';\nimport SectionTop from './sectionTop';\nimport getData from '../../methods/getMethod';\nimport { Row } from '../../utils/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: theme.spacing(2),\n    margin: theme.spacing(4),\n  },\n  container: {\n    justifyContent: 'space-around',\n    display: 'flex',\n  },\n}));\n\nexport default function Body(props) {\n\n  const [exams, setExams] = useState({ upComingExam: [], runningExam: [], endedExam: [] })\n\n  useEffect(async function load() {\n    const res = await getData('/exam/currentExam');\n    if (res.status === 200)\n      setExams(res.body);\n    // const intervalId = setInterval(async() => {\n        \n    //   console.log('refreshing');\n    //   const res = await getData('/exam/currentExam');\n    //   if (res.status === 200) {\n    //     console.log('reload');\n    //     setExams(res.body);\n    //   }\n    // }, 2000)\n    // return () => clearInterval(intervalId)\n    \n    // const refresh = setInterval(async () => {\n    // return clearInterval(refresh)\n  }, []);\n\n  const {} = props.state;\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <SectionTop state={props.state} />\n      <div className={classes.root} >\n        <Row columns=\"1fr 1fr 1fr\">\n          <GridColumn data={{ exams: exams.upComingExam, state: 'upcoming', ... props.state }} />\n          <GridColumn data={{ exams: exams.runningExam, state: 'running', ... props.state}} />\n          <GridColumn data={{ exams: exams.endedExam, state: 'finished', ... props.state }} />\n        </Row>\n      </div>\n    </div>\n  )\n}","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/alertBox.js",["271"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function AlertDialog(props) {\n    const {open,setOpen,description} = props.state\n    \n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Sorry!\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {description}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        OK\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/component/bottomNavbar.js",["272","273"],"import { useParams } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useState,useEffect } from 'react';\nimport postData from '../../methods/postMethod';\nimport { connect } from 'react-redux';\n\n\nimport styled from 'styled-components';\n\nconst StyledTextField = styled(TextField)`\n    .makeStyles-root-22 {\n        background-color: transparent;\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        backgroundColor: '#edfff8',\n        // border: '0.1px solid #000',\n        boxShadow: theme.shadows[2],\n        // flexGrow: 1,\n        height: '15vh',\n        // backgroundColor: 'red',\n        // backgroundColor: 'green',\n        // flexDirection: 'column-reverse',\n    },\n    packet: {\n        \n        display: 'flex',\n        flexDirection: 'column-reverse',\n    },\n    button: {\n        // height: '100%',\n        padding: theme.spacing(2, 4, 3),\n        display: 'flex',\n        justifyContent: 'center'\n    }\n\n\n}));\n\n\n\nconst BottomNavbar = (props) => {\n    let { id } = useParams();\n    const classes = useStyles();\n    const [question,setQuestion] =  useState('');\n    const {render,setRender} = props.state;\n    async function askQuestion()\n    {\n        console.log(\"pressed ask\")\n        const res = await postData(`/viva/postQuestion`,{\n            question: question,\n            authorName: props.user.firstName + ' ' + props.user.lastName,\n            authorEmail: props.user.email,\n            id: id\n        });\n        console.log(res);\n        if(res.status===200)\n            setQuestion('');\n        const response = await postData('/question/addQuestion',{question: question, email: localStorage.getItem('email') });\n        setRender((render+1)%100000); \n    }\n    return (\n        <div style={{borderTop: '1px solid #ececec'}} className={classes.packet}>\n            <div className={classes.packet}>\n\n                <div className={classes.button}>\n                    <StyledTextField\n                        required fullWidth label='Question' autoFocus value={question}\n                        onChange = {(event)=>{setQuestion(event.currentTarget.value)}}\n                    />\n                    <Button variant=\"contained\" color=\"primary\"  onClick = {askQuestion} >Ask</Button>\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.app.user,\n    }\n}\nexport default connect(mapStateToProps, null)(BottomNavbar)","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/component/questions.js",["274","275","276"],"\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport postData from '../../methods/postMethod';\nimport styled from 'styled-components';\n\nimport { Typography, Button, Divider } from '@material-ui/core';\n\n\nconst StyledTextField = styled(TextField)`\n    .makeStyles-root-22 {\n        background-color: transparent;\n    }\n`;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // backgroundColor: 'green',\n        height: '75vh',\n        overflowY: 'scroll',\n    },\n    parent: {\n        minWidth: 200,\n        margin: \"2%\",\n        boxShadow: theme.shadows[5],\n    },\n    // bullet: {\n    //     display: 'inline-block',\n    //     margin: '0 2px',\n    //     transform: 'scale(0.8)',\n    // },\n    question: {\n        fontSize: 17,\n    },\n    comment: {\n        // paddingLeft: 20,\n        // backgroundColor: 'red',\n        // margin: \"2%\",\n        paddingTop: 5,\n        fontSize: 12,\n    },\n    inp: {\n        // backgroundColor: 'green',\n        minWidth: '85%'\n    }\n\n}));\n\n\nexport default function Questions(props) {\n    const classes = useStyles();\n    const { id, questions, setQuestions } = props.state;\n    const { render, setRender } = props.state;\n\n    \n    async function loadQuestion() {\n        const res = await postData(`/viva/getVivaHistory`, { id: id })\n        if (res.status === 200) {\n            const { questions } = res.body;\n            if(questions === undefined)\n            {\n\n            }\n            else\n            {\n                const newState = questions.map(element => {\n                    element.inputComment = \"\";\n                    return element;\n                })\n                console.log(newState === questions);\n                setQuestions(newState);\n            }\n            \n        }\n    }\n    \n    useEffect(() => {\n        // const id = setInterval(loadQuestion,3000);\n        loadQuestion();\n        return () => {\n            clearInterval(id);\n        }\n    }, [])\n    \n    useEffect(()=>{\n        loadQuestion();\n    },[render]);\n    \n    // loadQuestion();\n    \n    \n    return (\n        <div className={classes.root}>\n            {\n                questions &&\n                questions.map((element, idx) => (\n                    <Card className={classes.parent}>\n                        <CardContent >\n                            <Typography className={classes.question} color=\"textPrimary\" gutterBottom>{element.question}</Typography>\n                            <Divider /><Divider />\n                            <Typography className={classes.question} color=\"textPrimary\" gutterBottom>Ask By {element.authorName}</Typography>\n                            {\n                                element.comments.map(reply =>\n                                    <Typography className={classes.comment} color=\"textPrimary\" gutterBottom>{reply.comment}</Typography>)\n                            }\n                        </CardContent>\n                        {\n                            <CardActions>\n                                <StyledTextField style={{ backgroundColor: 'white' }} id=\"standard-basic\" label=\"Write a comment. . .\" value={element.inputComment}\n                                    onChange={(event) => {\n                                        let newState = [...questions];\n                                        newState[idx].inputComment = event.currentTarget.value;\n                                        setQuestions(newState);\n                                    }} />\n                                <Button  variant=\"contained\" color=\"inherit\" size=\"small\" onClick={async () => {\n                                    await postData('/viva/postComment', {\n                                        id: id, question: element.question,\n                                        comment: element.inputComment,\n                                        email: localStorage.getItem('email')\n                                    })\n                                    setRender((render + 1) % 100000);\n                                }}>Comment</Button>\n                            </CardActions>\n                        }\n                    </Card>))\n            }\n\n        </div>\n    )\n}\n","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/component/rightNavBar.js",["277","278","279","280","281","282","283"],"/* eslint-disable react-hooks/exhaustive-deps */\n\n\nimport React, { useState,useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Typography, Button } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { useParams } from 'react-router-dom';\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\nimport postData from '../../methods/postMethod';\nimport putData from '../../methods/putMethod';\nimport getData from '../../methods/getMethod';\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n\nimport { Center } from '../../utils/styles';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { getViva } from '../../utils/api';\nimport { setCurrentExam, setCurrentViva } from '../../reducers/actions';\nimport examDetails from '../examDetails';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // flexGrow: 1,\n        height: '100%',\n        // display: 'flex',\n        // justifyContent: 'center',\n        // minWidth: 200,\n    },\n    title: {\n        // backgroundColor: 'yellow',\n        display: 'flex',\n        justifyContent: 'center',\n        // paddingTop: 15,\n        // paddingBottom: 10,\n        fontSize: 16,\n        fontWeight: 'bold',\n        fontFamily: 'Times',\n    },\n    container: {\n        overflowY: 'scroll',\n        height: '62vh',\n    },\n    box: {\n        boxShadow: theme.shadows[2],\n        justifyContent: 'space-around',\n        display: 'flex',\n        width: 200,\n        paddingLeft: 15,\n        paddingRight: 15,\n    },\n    roll: {\n        paddingLeft: 13,\n        paddingTop: 13,\n        borderBottom: 2,\n        borderTop: 2,\n    },\n    outline: {\n        // backgroundColor: 'green',\n        height: '71vh',\n        boxShadow: theme.shadows[3],\n    },\n    current: {\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: 10,\n        paddingBottom: 10,\n        paddingLeft: 10,\n        fontSize: 18,\n        fontWeight: 'bold',\n        fontFamily: 'Times',\n    }\n}));\n\n\nconst RightNavBar = (props) => {\n    const { dispatch, exam } = props;\n    const {setQuestions} = props.state;\n    const [waitingList, setWaitingList] = useState([]);\n    const [currentReg, setCurrentReg] = useState('None');\n    const classes = useStyles();\n    let { id } = useParams();\n    \n    useEffect(async () => {\n        if (currentReg !== 'None') {\n            const viva = await getViva(id, currentReg);\n            console.log('-----viva', viva.body)\n            dispatch(setCurrentViva(viva.body || {}));\n        }\n    }, [currentReg]);\n    async function loadData(){\n        const res = await getData(`/viva/waitingList/${id}`);\n        if (res.status === 200)\n        setWaitingList(res.body);\n        const response = await postData('/exam/getCurrentReg',{id:id});\n        if(response.status === 200)\n        setCurrentReg(response.body.currentReg);\n    }\n\n    const { render, setRender } = props.state;\n    const [showEndModal, setShowEndModal] = useState(false);\n    const [showNeedABreakModal, setShowNeedABreakModal] = useState(false);\n    const [breakDuration, setBreakDuration] = useState(5);\n    useEffect(() => {\n        loadData();\n    }, [render]);\n    \n    useEffect(() => {\n        const id = setInterval(loadData,3000);\n        loadData();\n        return () => {\n            clearInterval(id);\n        }\n    }, []);\n\n    async function handleClicked(roll) {\n        const res = await postData(`/exam/approveStudent`, { id: id, registrationNo: roll })\n        setRender((render + 1) % 100000);\n    }\n\n    async function removeStudent(){\n        const res = await postData('/exam/endExamForStudent', {id:id});\n        setQuestions([]);\n        setCurrentViva({})\n        setRender((render + 1) % 100000);\n    }\n\n    async function rejectStudent(roll){\n        const res = await postData('/exam/rejectStudent', {id: id, registrationNo: roll});\n        setRender((render + 1) % 100000);\n    }\n    const endExamHandler = async () => {\n        const res = await putData(`/exam/${id}`, { isEnded: true });\n        dispatch(push('/'));\n        setShowEndModal(false)\n    }\n\n    const takeABreakHandler = async () => {\n        await postData('/exam/vivaBreak', { id:id, breakDuration });\n        setShowNeedABreakModal(false);\n    }\n    \n    return (\n        <div className={classes.root} >\n            <div className={classes.current}>\n                {currentReg !== 'None' && (\n                    <>\n                        <Typography className={classes.current}> Current Participant : {currentReg} </Typography>\n                        <IconButton >\n                            <ExitToAppRoundedIcon color=\"primary\" onClick={()=>removeStudent()} />\n                        </IconButton>\n                    </>\n                )}\n                {currentReg === 'None' && (\n                    <Typography className={classes.current}>\n                        <Button onClick={() => setShowNeedABreakModal(true)} variant=\"contained\" color=\"primary\" >Need a break</Button>\n                    </Typography>\n                )}\n            </div>\n            <div className={classes.title}>\n                <Typography className={classes.title}> Waiting Room </Typography>\n            </div>\n            <Divider />\n            <div className={classes.outline} >\n                <div className={classes.title}>\n                    <div className={classes.container}>\n                        {waitingList.map((roll) =>\n                        (<div className={classes.box}>\n                            <Typography className={classes.roll}>{roll}</Typography>\n                            <IconButton onClick={() => handleClicked(roll)}>\n                                <AddCircleIcon color=\"primary\" />\n                            </IconButton>\n                            <IconButton onClick={() => rejectStudent(roll)}>\n                                <CancelRoundedIcon color=\"secondary\" />\n                            </IconButton>\n                            <br />\n                        </div>))}\n                    </div>\n                </div>\n            </div>\n\n            <Center style={{ marginTop: '10px' }}>\n                <Button color=\"secondary\" onClick={() => setShowEndModal(true)} className={classes.cancelButton} variant=\"contained\" >End Exam</Button>\n            </Center>\n\n            <Dialog\n                open={showEndModal}\n                onClose={() => setShowEndModal(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Are you sure, you want to end this exam?\"}</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    \n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={() => setShowEndModal(false)} color=\"primary\">\n                    No\n                </Button>\n                <Button onClick={() => endExamHandler()} color=\"primary\" autoFocus>\n                    Yes\n                </Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <Dialog\n                open={showNeedABreakModal}\n                onClose={() => setShowNeedABreakModal(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"How long (minutes)?\"}</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    <TextField value={breakDuration} type=\"number\" onChange={(e) => setBreakDuration(e.target.value)}></TextField>\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={() => setShowNeedABreakModal(false)} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={() => takeABreakHandler()} color=\"primary\" autoFocus>\n                    Confrim\n                </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default connect(state => ({\n    exam: state.app.exam,\n}), dispatch => ({ dispatch })) (RightNavBar);","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/Exams/component/leftNavBar.js",["284","285","286","287","288","289"],"\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { IconButton, Typography, Button, Divider } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { useParams } from 'react-router-dom';\nimport postData from '../../methods/postMethod';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { Center } from '../../utils/styles';\nimport { FormatListNumbered } from '@material-ui/icons';\nimport { formatTimeFromSeconds } from '../../utils/comon.functions';\nimport styled from 'styled-components';\n\n\nconst StyledListItem = styled(ListItem)`\n    box-shadow: 1px 1px 3px #bcbcbc;\n    margin-bottom: 10px;\n`;\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    top: {\n        height: '30%',\n        // backgroundColor: 'green',\n    },\n    root: {\n\n        height: '100%',\n        width: '100%'\n    },\n    stopwatch: {\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: 15,\n        paddingBottom: 15,\n        fontSize: 24,\n        fontWeight: 'bold',\n        fontFamily: 'Times',\n    },\n    title: {\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: 12,\n        paddingBottom: 12,\n        fontSize: 19,\n        fontWeight: 'bold',\n        fontFamily: 'Times',\n    },\n    container: {\n        // justifyContent: 'flex-start',\n        display: \"flex\"\n    },\n    outline: {\n        height: '70vh',\n        boxShadow: theme.shadows[3],\n    },\n\n    bank: {\n        overflowY: 'scroll',\n        height: '62%',\n    },\n    question: {\n        fontFamily: 'Times',\n        fontSize: 15,\n        justifyContent: 'flex-start',\n        display: \"flex\"\n    },\n    icon: {\n        flexGrow: 1,\n        justifyContent: 'flex-end',\n        display: \"flex\",\n    }\n\n\n}));\n\n\n\nconst LeftNavBar = ({ exam, viva, user, state, stopWatchTime, setStopWatchTime }) => {\n    const classes = useStyles();\n    const [bank, setBank] = useState([]);\n    const [alive, setAlive] = useState(0);\n    const { render, setRender } = state;\n    useEffect(() => {\n        loadBank();\n    }, [render]);\n    let { id } = useParams();\n    async function loadBank() {\n        const res = await postData(`/question/getBank`, { email: localStorage.getItem('email') });\n        console.log('helo', res);\n        if (res.status === 200) {\n            setBank(res.body);\n        }\n    }\n\n    // useEffect(() => {\n    //     if (viva) {\n    //         const seconds = moment().diff(viva.startTime, 'seconds');\n    //         console.log('---viva', viva, seconds);\n    //         setStopWatchTime(seconds)\n    //     }\n    // }, [viva])\n\n    useEffect(() => {\n        setTimeout(() => {\n            // if (exam.currentReg && exam.currentReg !== 'None')\n            const seconds = moment().diff(viva.startTime, 'seconds');\n            setStopWatchTime(seconds)\n            setAlive(alive+1);\n        }, 1000)\n    }, [alive, viva.startTime])\n\n    useEffect(() => {\n        // const id = setInterval(loadBank,1000);\n        loadBank();\n        return () => {\n            clearInterval(id);\n        }\n    }, []);\n\n    return (\n        <div className={classes.root} >\n            <div className={classes.top}>\n\n                <div className={classes.stopwatch}>\n                    <Typography className={classes.stopwatch}> {(exam.courseCode || '') + ' ' + (exam.courseTitle || '')} </Typography>\n                </div>\n                <Divider /><Divider /><Divider />\n                <div className={classes.title}>\n                    <Typography className={classes.title}> Question Bank </Typography>\n                </div>\n            </div>\n            {/* <Divider /><Divider /><Divider /> */}\n            <List className={classes.bank}>\n                {\n                    bank.map(question => (\n                        // <div >\n                        <StyledListItem className={classes.container}>\n                            <Divider className={classes.divide} />\n                            <div className={classes.question}>\n                                <Typography className={classes.question}> {question} </Typography>\n                            </div>\n                            <div className={classes.icon}>\n                                <IconButton onClick={async () => {\n                                    await postData(`/viva/postQuestion`, {\n                                        question: question, \n                                        authorEmail: user.email,\n                                        authorName: user.firstName + ' ' + user.lastName,\n                                        id: id\n                                    });\n                                    setRender((render + 1) % 100000);\n                                }}>\n                                    <ArrowForwardRoundedIcon color=\"primary\" />\n                                </IconButton>\n                                <IconButton onClick={async () => {\n                                    await postData('/question/deleteQuestion', { question: question, email: localStorage.getItem('email') })\n                                    setRender((render + 1) % 100000);\n                                }}>\n                                    <DeleteIcon color=\"secondary\" />\n                                </IconButton>\n                            </div>\n                        </StyledListItem>\n                    ))\n                }\n            </List>\n        </div>)\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.app.user,\n        exam: state.app.exam,\n        viva: state.app.viva,\n    }\n}\nexport default connect(mapStateToProps, null)(LeftNavBar)","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/field/copyright.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldViva/createVivaComponent.js",["290"],"\nimport React, { useState } from 'react';\nimport { Button, Typography, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NameTitle from './pairTextField'\nimport DatePicker from './datePicker';\nimport TextField from '@material-ui/core/TextField';\nimport RegPicker from './regPicker';\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        // backgroundColor: 'red',\n        backgroundColor: '#edfff8',\n        border: '0.5px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        width: 600,\n        height: 500,\n    },\n    title: {\n        // alignItems: 'center',\n        // flex:'center',\n        display: 'flex',\n        justifyContent: 'center',\n        padding: theme.spacing(2),\n        fontSize: 24,\n        fontWeight: 'bold',\n        fontFamily: 'Times'\n    },\n    buttonDiv: {\n        // background:'red',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n\n}));\n\nconst initialVivaInfo = {\n    courseCode: null,\n    courseTitle: null,\n    startingRegNo: null,\n    endingRegNo: null,\n    date: null,\n    startTime: null,\n    examDuration: null,\n}\n\n\n\nfunction validateForm(vivaInfo, setVivaInfo) {\n    let tempInfo = { ...vivaInfo };\n    let isOk = true;\n    console.log(tempInfo)\n    for (const item in vivaInfo) {\n        if (tempInfo[item] === null || tempInfo[item] === '') {\n            tempInfo[item] = '';\n            isOk = false;\n        }\n    }\n    console.log(tempInfo)\n    setVivaInfo(tempInfo)\n    return isOk;\n}\n\n\nexport default function CreateVivaComponent(props) {\n\n    const classes = useStyles();\n    const [vivaInfo, setVivaInfo] = useState(initialVivaInfo);\n    const [step, setStep] = useState(0);\n    const { setVivaModal } = props.state;\n\n    function handleChange(event) {\n        const { name, value } = event.currentTarget\n        setVivaInfo({ ...vivaInfo, [name]: value })\n    }\n\n\n    const state = {\n        vivaInfo: vivaInfo,\n        setVivaInfo: setVivaInfo,\n        setVivaInfo: setVivaInfo,\n        handleChange: handleChange,\n        step: step,\n        setStep: setStep,\n        setVivaModal: setVivaModal,\n    };\n\n\n    function submitAction() {\n        if (validateForm(vivaInfo, setVivaInfo)) {\n            setStep(1);\n        }\n    }\n    const body = ( step===0  ? <div className={classes.root}>\n        <div className={classes.title}>\n            <Typography className={classes.title}>Create New Viva</Typography>\n        </div>\n        <div>\n            <NameTitle state={{ ...state, name1: 'courseCode', name2: 'courseTitle' }} myLabel={{ label1: 'Course Code', label2: 'Title' }} />\n            <br />\n            <NameTitle state={{ ...state, name1: 'startingRegNo', name2: 'endingRegNo' }} myLabel={{ label1: 'Starting Registration No.', label2: 'Ending Registration No.' }} />\n            <DatePicker state={{ ...state, name1: 'date', name2: 'startTime' }} />\n            <br />\n            <Grid item xs={12}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField error={vivaInfo.examDuration === '' ? true : false}\n                            variant=\"outlined\" name='examDuration' onChange={handleChange}\n                            required fullWidth label='Viva Duration(in minute)' autoFocus\n                            value={vivaInfo.examDuration === null ? '' : vivaInfo.examDuration}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <br />\n            <br />\n        </div>\n        <div className={classes.buttonDiv}>\n            <Button color=\"primary\" variant=\"contained\" onClick={() => submitAction()} >Create Viva</Button>\n            <Button color=\"secondary\" onClick={() => setVivaModal(false)} className={classes.cancelButton} variant=\"contained\" >Cancel</Button>\n        </div>\n\n    </div>  : <RegPicker state={state}/> )\n    return (\n        <div>\n            {body}\n        </div>\n    )\n}","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldHome/column.js",["291"],"\n\n\nimport '../style.css'\nimport {Grid } from '@material-ui/core';\nimport Exam from './exam';\n\nexport default function GridColumn(props) {\n    const { exams,state } = props.data;\n    let details = {...props.data};\n    delete details.exams;\n    const component = exams.map((exam) => <Exam key={exam._id} data={{ ...details, exam: exam}}/>)\n    \n    return (\n        <Grid item>\n            {component}\n        </Grid>\n    )\n}","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldHome/sectionTop.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/methods.js",["292","293"],"const axios = require('axios');\n\n// export async function postData(url, packet) {\n//     try {\n//         // const res = axios.post(url,packet)\n//         let res = await fetch('http://localhost:4000' + url, {\n//             method: 'post',\n//             body: JSON.stringify(packet),\n//             headers: { 'Content-Type': 'application/json' }\n//         });\n//         return { statusCode: res.status, body: await res.json() };\n//     } catch (err) {\n//          console.log('error: ' +  err);\n//     }\n// }\n\n// export async function getData(url) {\n\n//     // let res = axios.get(url);\n//     let res = await fetch('http://localhost:4000' + url);\n//     return { statusCode: res.status, body: await res.json() };\n    // let dummyData = {\n    //     firstName: 'KIRITI',\n    //     lastName: \"MUKHERJEE\",\n    //     registrationNo: 2017331063,\n    //     email: 'kimuapon@gmail.com',\n    //     isTeacher: false,\n    //     about: `Hi! I'm magic-kiri!`\n    // }\n    // return { statusCode: 200 , body: dummyData  };\n// }\n\n\nasync function postData(url, packet) {\n    let res;\n    try {\n        res = await axios.post('http://localhost:4000' + url, packet )\n        return res.data;\n    } catch (err) {\n        console.log('error');\n        return {statusCode: 404};\n        // return {statusCode:res.status, body: res.data}\n         console.log('error: ' +  err);\n    }\n}\n\n\nasync function getData(url) {\n    console.log(\"ashiteseee!\");\n    let res = axios.get('http://localhost:4000' + url);\n\n    return res.data;\n}\n\n// export default postData;\nexport default  {postData,getData}","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldViva/pairTextField.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/field/teacherMode.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/field/password.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/field/name.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/field/registrationNo.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/field/email.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/authentication/formStyle.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldViva/regPicker.js",["294","295","296","297","298"],"import { Button, Typography, Grid, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useState,useEffect } from 'react';\nimport postData from '../../methods/postMethod';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        backgroundColor: '#edfff8',\n        border: '0.5px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        width: 350,\n        height: 550,\n    },\n    title: {\n        display: 'flex',\n        justifyContent: 'center',\n        padding: theme.spacing(0.5),\n        fontSize: 24,\n        fontWeight: 'bold',\n        fontFamily: 'Times'\n    },\n    button: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    container: {\n        overflowY: 'auto',\n        height: 330,\n    },\n    box: {\n        boxShadow: theme.shadows[4],\n        justifyContent: 'space-around',\n        display: 'flex',\n        width: 200,\n        paddingLeft: 15,\n        paddingRight: 15,\n    },\n    roll: {\n        paddingLeft: 15,\n        paddingTop: 13,\n        borderBottom: 2,\n        borderTop: 2,\n    },\n    text: {\n        paddingBottom: 10,\n        paddingTop: 15,\n    },\n    submitButton:{\n        display: 'flex',\n        justifyContent: 'space-around',\n        paddingTop: 25,\n    }\n\n}));\n\nfunction RegPicker(props) {\n    const { setStep, vivaInfo,setVivaModal} = props.state;\n    const { user } = props;\n    let { startingRegNo, endingRegNo, } = vivaInfo;\n    \n    startingRegNo = parseInt(startingRegNo);\n    endingRegNo = parseInt(endingRegNo);\n\n    const [regList,setRegList] = useState([]);\n    const [regNo,setRegNo] = useState(null);\n\n    const classes = useStyles();    \n    useEffect( () => {\n        let reg = [];\n        for(let r=startingRegNo; r<=endingRegNo;r++)\n            reg.push(r);\n        setRegList(reg);\n        console.log(reg);\n    } , [] )\n    \n    function removeRoll(roll){\n        let reg = [];\n        for(let r of regList)\n            if(r!=roll)\n                reg.push(r)\n        setRegList(reg);\n        console.log(reg);\n    }\n    function addRoll(){\n        if(regNo==='' || regNo===null)\n            return;\n        const result = regList.find((e)=>(e==parseInt(regNo)));\n        if(result!=undefined)\n            return;\n        const reg = [...regList];\n        reg.push(parseInt(regNo)) ;\n        reg.sort(function(a, b){return a - b});\n        setRegList(reg);\n    }\n    async function getName(){\n        console.log(user);\n        return `${user.firstName} ${user.lastName}`\n    }\n\n    async function createViva(){\n        let info = {...vivaInfo};\n        let date = info.date.getTime()-(info.date.getTime()%86400000)\n        date+=info.startTime%86400000;\n        info.startTime = new Date(date);\n        delete info.date;\n        const packet = {...info, email: localStorage.getItem('email'), regList : regList};\n\n        packet.courseTeacher = await getName();\n        const res = await postData(`/exam/create`,packet)\n        if(res.status===200)\n            setVivaModal(false);\n    }\n\n\n    const component = regList.map((roll) =>\n    (<div className={classes.box}>\n        <Typography className={classes.roll}>{roll}</Typography>\n        <IconButton aria-label=\"delete\" className={classes.margin} onClick={()=>removeRoll(roll)}>\n            <DeleteIcon />\n        </IconButton>\n        <br />\n    </div>))\n    return (\n        <div className={classes.root}>\n            <div className={classes.title}>\n                <Typography className={classes.title}>Create New Viva</Typography>\n            </div>\n            <div className={classes.title}>\n                <div className={classes.container}>\n                    {component}\n                </div>\n            </div>\n            <div className={classes.text}>\n                <Typography>Add a student via Registration No.</Typography>\n            </div>\n            <div className={classes.button}>\n                <TextField\n                    required fullWidth label='Registration No.' autoFocus\n                    onChange={(event)=> setRegNo(event.currentTarget.value) }\n                />\n                <Button variant=\"contained\" color=\"primary\" onClick={addRoll}>Add</Button>\n            </div>\n            <div className={classes.submitButton}>\n                <Button  variant=\"contained\" color=\"primary\" onClick={createViva}>Create Viva</Button>\n                <Button  variant=\"contained\" color=\"secondary\" onClick={()=> setStep(0)}>Back</Button>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.app.user,\n        exam: state.app.exam,\n        viva: state.app.viva,\n    }\n}\nexport default connect(mapStateToProps, null)(RegPicker)","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldHome/exam.js",["299","300","301","302","303","304","305"],"import React from 'react';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport getData from '../../methods/getMethod';\nimport postData from '../../methods/postMethod';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 300,\n        margin: theme.spacing(2),\n        padding: theme.spacing(1),\n        display: 'flex',\n    },\n    title: {\n        // flex:'center',\n        fontSize: 14,\n        fontWeight: 'bold',\n        fontFamily: 'Times'\n    },\n    text: {\n        fontSize: 14,\n        fontFamily: 'Times'\n    },\n    date: {\n        fontSize: 14,\n        fontFamily: 'Times',\n        color: '#1780ad',\n    }\n}));\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n`;\n\nexport default function Exam(props) {\n    const classes = useStyles();\n\n    const { courseCode, courseTeacher, courseTitle, date, startTime, endTime, _id, email } = props.data.exam;\n    const { state, setStudentModal, studentModal } = props.data;\n    \n    let textDate, btnText;\n\n    if (state === 'running') {\n        btnText = 'Enter';\n        textDate = (<Typography className={classes.date} >RUNNING</Typography>);\n    }\n    else {\n        btnText = 'Details';\n        textDate = (<div>{`Date: ${date}`} </div>);\n    }\n\n    const link = \"/\"+btnText.toLocaleLowerCase()+\"/\"+_id;\n      \n    \n    async function buttonClicked(event) {\n        const teacherMode = (localStorage.getItem('teacherMode') == 'true');\n        if (teacherMode == false) {\n            if (state === 'running') {\n                console.log(\"JOIN KORTE CHAY\");\n                console.log(localStorage.getItem('email'));\n                const res = await postData(`/exam/joinRequest`,{email: localStorage.getItem('email') , id : _id });\n                console.log(res);\n            }\n            else if (state == 'upcoming') {\n                const res = await getData(`/exam/details/${_id}`);\n                console.log('button pressed!!');\n                if (res.status === 200) {\n                    const schedule = res.body;\n                    let details = {\n                        open : true,\n                        header: 'Exam Schedule',\n                        body : res.body,\n                        valueType: 'Viva Schedule'\n                    }\n                    console.log(details);\n                    setStudentModal(details);\n                }\n                else\n                {\n                    console.log('not working!');\n                }\n            }\n            else {\n\n            }\n        }\n        else {\n            if (state === 'running') {\n\n            }\n            else if (state == 'upcoming') {\n\n            }\n            else {\n\n            }\n        }\n    }\n\n    return (\n        <Card className={classes.root} style={{ boxShadow: '2px 2px 5px #bcbcbc' }}>\n            <CardContent >\n                <Typography className={classes.title} gutterBottom>{courseCode + ': ' + courseTitle}</Typography>\n                <Typography className={classes.text}>\n                    {'by ' + courseTeacher}\n                    <br />\n                    {textDate}\n                </Typography>\n                <Typography className={classes.text}>\n                    {`From ${startTime} to ${endTime}`}\n                </Typography>\n\n            </CardContent>\n            <CardActions>\n              <StyledLink to={link}>  <Button  color=\"primary\" variant=\"contained\" size=\"small\" onClick={buttonClicked}>{btnText}</Button></StyledLink>\n              {state === 'running' && <StyledLink to={`/details/${_id}`}>  <Button  color=\"primary\" variant=\"contained\" size=\"small\" onClick={buttonClicked}>Details</Button></StyledLink>}\n                {/* <Button color=\"primary\" variant=\"contained\" size=\"small\" onClick={buttonClicked}>{btnText}</Button> */}\n            </CardActions>\n        </Card>\n    );\n}","/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/fieldViva/datePicker.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/utils/comon.functions.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/methods/putMethod.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/modal/DetailsModal.js",[],"/home/ovishek/Documents/GIT/arup-project/EMS-Front-End/src/home/modal/detailsModalComponent.js",["306","307","308","309"],{"ruleId":"310","severity":1,"message":"311","line":24,"column":6,"nodeType":"312","endLine":24,"endColumn":38,"suggestions":"313"},{"ruleId":"314","severity":1,"message":"315","line":26,"column":10,"nodeType":"316","messageId":"317","endLine":26,"endColumn":14},{"ruleId":"314","severity":1,"message":"318","line":26,"column":16,"nodeType":"316","messageId":"317","endLine":26,"endColumn":23},{"ruleId":"314","severity":1,"message":"319","line":32,"column":12,"nodeType":"316","messageId":"317","endLine":32,"endColumn":23},{"ruleId":"314","severity":1,"message":"320","line":32,"column":25,"nodeType":"316","messageId":"317","endLine":32,"endColumn":39},{"ruleId":"310","severity":1,"message":"321","line":39,"column":8,"nodeType":"312","endLine":39,"endColumn":10,"suggestions":"322"},{"ruleId":"314","severity":1,"message":"323","line":2,"column":10,"nodeType":"316","messageId":"317","endLine":2,"endColumn":16},{"ruleId":"314","severity":1,"message":"324","line":46,"column":12,"nodeType":"316","messageId":"317","endLine":46,"endColumn":22},{"ruleId":"310","severity":1,"message":"325","line":25,"column":8,"nodeType":"312","endLine":25,"endColumn":10,"suggestions":"326"},{"ruleId":"314","severity":1,"message":"327","line":11,"column":10,"nodeType":"316","messageId":"317","endLine":11,"endColumn":26},{"ruleId":"314","severity":1,"message":"328","line":28,"column":7,"nodeType":"316","messageId":"317","endLine":28,"endColumn":19},{"ruleId":"314","severity":1,"message":"329","line":68,"column":12,"nodeType":"316","messageId":"317","endLine":68,"endColumn":16},{"ruleId":"314","severity":1,"message":"330","line":68,"column":18,"nodeType":"316","messageId":"317","endLine":68,"endColumn":25},{"ruleId":"310","severity":1,"message":"331","line":70,"column":37,"nodeType":"312","endLine":70,"endColumn":39,"suggestions":"332"},{"ruleId":"314","severity":1,"message":"333","line":7,"column":8,"nodeType":"316","messageId":"317","endLine":7,"endColumn":15},{"ruleId":"314","severity":1,"message":"334","line":8,"column":10,"nodeType":"316","messageId":"317","endLine":8,"endColumn":19},{"ruleId":"314","severity":1,"message":"328","line":27,"column":7,"nodeType":"316","messageId":"317","endLine":27,"endColumn":19},{"ruleId":"314","severity":1,"message":"329","line":50,"column":12,"nodeType":"316","messageId":"317","endLine":50,"endColumn":16},{"ruleId":"314","severity":1,"message":"330","line":50,"column":18,"nodeType":"316","messageId":"317","endLine":50,"endColumn":25},{"ruleId":"310","severity":1,"message":"331","line":52,"column":37,"nodeType":"312","endLine":52,"endColumn":49,"suggestions":"335"},{"ruleId":"314","severity":1,"message":"336","line":5,"column":27,"nodeType":"316","messageId":"317","endLine":5,"endColumn":36},{"ruleId":"314","severity":1,"message":"337","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":15},{"ruleId":"314","severity":1,"message":"323","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":14},{"ruleId":"314","severity":1,"message":"323","line":8,"column":22,"nodeType":"316","messageId":"317","endLine":8,"endColumn":28},{"ruleId":"314","severity":1,"message":"338","line":10,"column":8,"nodeType":"316","messageId":"317","endLine":10,"endColumn":21},{"ruleId":"314","severity":1,"message":"333","line":22,"column":8,"nodeType":"316","messageId":"317","endLine":22,"endColumn":15},{"ruleId":"314","severity":1,"message":"339","line":1,"column":8,"nodeType":"316","messageId":"317","endLine":1,"endColumn":17},{"ruleId":"314","severity":1,"message":"333","line":1,"column":10,"nodeType":"316","messageId":"317","endLine":1,"endColumn":17},{"ruleId":"314","severity":1,"message":"339","line":2,"column":8,"nodeType":"316","messageId":"317","endLine":2,"endColumn":17},{"ruleId":"314","severity":1,"message":"340","line":12,"column":10,"nodeType":"316","messageId":"317","endLine":12,"endColumn":21},{"ruleId":"314","severity":1,"message":"341","line":24,"column":16,"nodeType":"316","messageId":"317","endLine":24,"endColumn":25},{"ruleId":"314","severity":1,"message":"342","line":24,"column":26,"nodeType":"316","messageId":"317","endLine":24,"endColumn":34},{"ruleId":"314","severity":1,"message":"343","line":24,"column":35,"nodeType":"316","messageId":"317","endLine":24,"endColumn":49},{"ruleId":"314","severity":1,"message":"344","line":24,"column":50,"nodeType":"316","messageId":"317","endLine":24,"endColumn":55},{"ruleId":"314","severity":1,"message":"345","line":24,"column":56,"nodeType":"316","messageId":"317","endLine":24,"endColumn":61},{"ruleId":"314","severity":1,"message":"346","line":26,"column":9,"nodeType":"316","messageId":"317","endLine":26,"endColumn":18},{"ruleId":"314","severity":1,"message":"347","line":3,"column":10,"nodeType":"316","messageId":"317","endLine":3,"endColumn":14},{"ruleId":"310","severity":1,"message":"348","line":27,"column":13,"nodeType":"349","endLine":44,"endColumn":4},{"ruleId":"350","severity":1,"message":"351","line":46,"column":9,"nodeType":"352","messageId":"353","endLine":46,"endColumn":11},{"ruleId":"354","severity":1,"message":"355","line":55,"column":80,"nodeType":"356","messageId":"357","endLine":55,"endColumn":81,"fix":"358"},{"ruleId":"354","severity":1,"message":"355","line":56,"column":78,"nodeType":"356","messageId":"357","endLine":56,"endColumn":79,"fix":"359"},{"ruleId":"354","severity":1,"message":"355","line":57,"column":77,"nodeType":"356","messageId":"357","endLine":57,"endColumn":78,"fix":"360"},{"ruleId":"314","severity":1,"message":"361","line":12,"column":11,"nodeType":"316","messageId":"317","endLine":12,"endColumn":26},{"ruleId":"314","severity":1,"message":"336","line":4,"column":26,"nodeType":"316","messageId":"317","endLine":4,"endColumn":35},{"ruleId":"314","severity":1,"message":"362","line":63,"column":15,"nodeType":"316","messageId":"317","endLine":63,"endColumn":23},{"ruleId":"314","severity":1,"message":"363","line":2,"column":28,"nodeType":"316","messageId":"317","endLine":2,"endColumn":36},{"ruleId":"310","severity":1,"message":"364","line":86,"column":8,"nodeType":"312","endLine":86,"endColumn":10,"suggestions":"365"},{"ruleId":"310","severity":1,"message":"331","line":90,"column":7,"nodeType":"312","endLine":90,"endColumn":15,"suggestions":"366"},{"ruleId":"314","severity":1,"message":"367","line":26,"column":10,"nodeType":"316","messageId":"317","endLine":26,"endColumn":24},{"ruleId":"314","severity":1,"message":"368","line":27,"column":8,"nodeType":"316","messageId":"317","endLine":27,"endColumn":19},{"ruleId":"314","severity":1,"message":"329","line":84,"column":23,"nodeType":"316","messageId":"317","endLine":84,"endColumn":27},{"ruleId":"314","severity":1,"message":"369","line":124,"column":15,"nodeType":"316","messageId":"317","endLine":124,"endColumn":18},{"ruleId":"314","severity":1,"message":"369","line":129,"column":15,"nodeType":"316","messageId":"317","endLine":129,"endColumn":18},{"ruleId":"314","severity":1,"message":"369","line":136,"column":15,"nodeType":"316","messageId":"317","endLine":136,"endColumn":18},{"ruleId":"314","severity":1,"message":"369","line":140,"column":15,"nodeType":"316","messageId":"317","endLine":140,"endColumn":18},{"ruleId":"314","severity":1,"message":"323","line":8,"column":34,"nodeType":"316","messageId":"317","endLine":8,"endColumn":40},{"ruleId":"314","severity":1,"message":"370","line":19,"column":10,"nodeType":"316","messageId":"317","endLine":19,"endColumn":16},{"ruleId":"314","severity":1,"message":"371","line":20,"column":10,"nodeType":"316","messageId":"317","endLine":20,"endColumn":28},{"ruleId":"314","severity":1,"message":"372","line":21,"column":10,"nodeType":"316","messageId":"317","endLine":21,"endColumn":31},{"ruleId":"310","severity":1,"message":"373","line":122,"column":8,"nodeType":"312","endLine":122,"endColumn":31,"suggestions":"374"},{"ruleId":"310","severity":1,"message":"321","line":130,"column":8,"nodeType":"312","endLine":130,"endColumn":10,"suggestions":"375"},{"ruleId":"376","severity":1,"message":"377","line":84,"column":9,"nodeType":"378","messageId":"353","endLine":84,"endColumn":20},{"ruleId":"314","severity":1,"message":"379","line":9,"column":19,"nodeType":"316","messageId":"317","endLine":9,"endColumn":24},{"ruleId":"380","severity":1,"message":"381","line":43,"column":10,"nodeType":"382","messageId":"383","endLine":43,"endColumn":40},{"ruleId":"384","severity":1,"message":"385","line":56,"column":1,"nodeType":"386","endLine":56,"endColumn":35},{"ruleId":"314","severity":1,"message":"347","line":1,"column":30,"nodeType":"316","messageId":"317","endLine":1,"endColumn":34},{"ruleId":"310","severity":1,"message":"387","line":79,"column":9,"nodeType":"312","endLine":79,"endColumn":11,"suggestions":"388"},{"ruleId":"389","severity":1,"message":"390","line":84,"column":17,"nodeType":"391","messageId":"353","endLine":84,"endColumn":19},{"ruleId":"389","severity":1,"message":"392","line":92,"column":44,"nodeType":"391","messageId":"353","endLine":92,"endColumn":46},{"ruleId":"389","severity":1,"message":"390","line":93,"column":18,"nodeType":"391","messageId":"353","endLine":93,"endColumn":20},{"ruleId":"314","severity":1,"message":"345","line":44,"column":84,"nodeType":"316","messageId":"317","endLine":44,"endColumn":89},{"ruleId":"314","severity":1,"message":"393","line":45,"column":37,"nodeType":"316","messageId":"317","endLine":45,"endColumn":49},{"ruleId":"389","severity":1,"message":"392","line":62,"column":66,"nodeType":"391","messageId":"353","endLine":62,"endColumn":68},{"ruleId":"389","severity":1,"message":"392","line":63,"column":25,"nodeType":"391","messageId":"353","endLine":63,"endColumn":27},{"ruleId":"389","severity":1,"message":"392","line":70,"column":28,"nodeType":"391","messageId":"353","endLine":70,"endColumn":30},{"ruleId":"314","severity":1,"message":"394","line":74,"column":27,"nodeType":"316","messageId":"317","endLine":74,"endColumn":35},{"ruleId":"389","severity":1,"message":"392","line":97,"column":28,"nodeType":"391","messageId":"353","endLine":97,"endColumn":30},{"ruleId":"314","severity":1,"message":"363","line":3,"column":17,"nodeType":"316","messageId":"317","endLine":3,"endColumn":25},{"ruleId":"314","severity":1,"message":"347","line":5,"column":30,"nodeType":"316","messageId":"317","endLine":5,"endColumn":34},{"ruleId":"314","severity":1,"message":"395","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":18},{"ruleId":"314","severity":1,"message":"396","line":7,"column":8,"nodeType":"316","messageId":"317","endLine":7,"endColumn":18},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'localStorage.token' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["397"],"no-unused-vars","'page' is assigned a value but never used.","Identifier","unusedVar","'setPage' is assigned a value but never used.","'profileInfo' is assigned a value but never used.","'setProfileInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["398"],"'Button' is defined but never used.","'btnClicked' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["399"],"'CircularProgress' is defined but never used.","'RightWrapper' is assigned a value but never used.","'exam' is assigned a value but never used.","'setExam' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadQuestion'. Either include it or remove the dependency array.",["400"],"'getData' is defined but never used.","'useParams' is defined but never used.",["401"],"'useEffect' is defined but never used.","'Toolbar' is defined but never used.","'ArrowBackIcon' is defined but never used.","'NameTitle' is defined but never used.","'pairDisplay' is defined but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'registrationNo' is assigned a value but never used.","'about' is assigned a value but never used.","'email' is assigned a value but never used.","'component' is assigned a value but never used.","'Grid' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","FunctionExpression","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"402","text":"403"},{"range":"404","text":"403"},{"range":"405","text":"403"},"'handleClickOpen' is assigned a value but never used.","'response' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'loadQuestion'. Either include them or remove the dependency array.",["406"],["407"],"'setCurrentExam' is defined but never used.","'examDetails' is defined but never used.","'res' is assigned a value but never used.","'Center' is defined but never used.","'FormatListNumbered' is defined but never used.","'formatTimeFromSeconds' is defined but never used.","React Hook useEffect has a missing dependency: 'setStopWatchTime'. Either include it or remove the dependency array. If 'setStopWatchTime' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["408"],["409"],"no-dupe-keys","Duplicate key 'setVivaInfo'.","ObjectExpression","'state' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'endingRegNo' and 'startingRegNo'. Either include them or remove the dependency array.",["410"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","Expected '===' and instead saw '=='.","'studentModal' is assigned a value but never used.","'schedule' is assigned a value but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.",{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},[1511,1512],"",[1607,1608],[1701,1702],{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"413","fix":"427"},{"desc":"428","fix":"429"},"Update the dependencies array to be: [user.email, dispatch]",{"range":"430","text":"431"},"Update the dependencies array to be: [id]",{"range":"432","text":"433"},"Update the dependencies array to be: [dispatch, id]",{"range":"434","text":"435"},"Update the dependencies array to be: [loadQuestion]",{"range":"436","text":"437"},"Update the dependencies array to be: [loadQuestion, user.email]",{"range":"438","text":"439"},"Update the dependencies array to be: [id, loadQuestion]",{"range":"440","text":"441"},"Update the dependencies array to be: [loadQuestion, render]",{"range":"442","text":"443"},"Update the dependencies array to be: [alive, setStopWatchTime, viva.startTime]",{"range":"444","text":"445"},{"range":"446","text":"433"},"Update the dependencies array to be: [endingRegNo, startingRegNo]",{"range":"447","text":"448"},[927,959],"[user.email, dispatch]",[1156,1158],"[id]",[811,813],"[dispatch, id]",[1955,1957],"[loadQuestion]",[1433,1445],"[loadQuestion, user.email]",[2205,2207],"[id, loadQuestion]",[2264,2272],"[loadQuestion, render]",[3108,3131],"[alive, setStopWatchTime, viva.startTime]",[3297,3299],[2035,2037],"[endingRegNo, startingRegNo]"]